{
  "version": 3,
  "sources": ["browser-external:dgram", "browser-external:net", "../../ws/browser.js", "../../long/src/long.js", "../../osc/src/osc.js", "../../slip/src/slip.js", "browser-external:events", "../../osc/src/osc-transports.js", "../../osc/src/platforms/osc-websocket-client.js", "browser-external:stream", "../../@serialport/parser-byte-length/dist/index.js", "../../@serialport/parser-cctalk/dist/index.js", "../../@serialport/parser-delimiter/dist/index.js", "../../@serialport/parser-inter-byte-timeout/dist/index.js", "../../@serialport/parser-packet-length/dist/index.js", "../../@serialport/parser-readline/dist/index.js", "../../@serialport/parser-ready/dist/index.js", "../../@serialport/parser-regex/dist/index.js", "../../@serialport/parser-slip-encoder/dist/decoder.js", "../../@serialport/parser-slip-encoder/dist/encoder.js", "../../@serialport/parser-slip-encoder/dist/index.js", "../../@serialport/parser-spacepacket/dist/utils.js", "../../@serialport/parser-spacepacket/dist/index.js", "../../ms/index.js", "../../debug/src/common.js", "../../debug/src/browser.js", "../../@serialport/stream/dist/index.js", "../../@serialport/binding-mock/dist/index.js", "../../serialport/dist/serialport-mock.js", "browser-external:fs", "browser-external:path", "browser-external:os", "../../node-gyp-build/node-gyp-build.js", "../../node-gyp-build/index.js", "browser-external:util", "../../@serialport/bindings-cpp/dist/load-bindings.js", "../../@serialport/bindings-cpp/dist/errors.js", "../../@serialport/bindings-cpp/dist/poller.js", "../../@serialport/bindings-cpp/dist/unix-read.js", "../../@serialport/bindings-cpp/dist/unix-write.js", "../../@serialport/bindings-cpp/dist/darwin.js", "browser-external:child_process", "../../@serialport/bindings-cpp/dist/linux-list.js", "../../@serialport/bindings-cpp/dist/linux.js", "../../@serialport/bindings-cpp/dist/win32-sn-parser.js", "../../@serialport/bindings-cpp/dist/win32.js", "../../@serialport/bindings-interface/dist/index.js", "../../@serialport/bindings-cpp/dist/index.js", "../../serialport/dist/serialport.js", "../../serialport/dist/index.js", "../../osc/src/platforms/osc-node-serialport.js", "../../osc/src/platforms/osc-node-serialport-loader.js", "../../osc/src/platforms/osc-node.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"dgram\" has been externalized for browser compatibility. Cannot access \"dgram.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"net\" has been externalized for browser compatibility. Cannot access \"net.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n", "module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n", "/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Copyright 2014-2016, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/* global require, module, process, Buffer, Long, util */\n\nvar osc = osc || {};\n\n(function () {\n\n    \"use strict\";\n\n    osc.SECS_70YRS = 2208988800;\n    osc.TWO_32 = 4294967296;\n\n    osc.defaults = {\n        metadata: false,\n        unpackSingleArgs: true\n    };\n\n    // Unsupported, non-API property.\n    osc.isCommonJS = typeof module !== \"undefined\" && module.exports ? true : false;\n\n    // Unsupported, non-API property.\n    osc.isNode = osc.isCommonJS && typeof window === \"undefined\";\n\n    // Unsupported, non-API property.\n    osc.isElectron = typeof process !== \"undefined\" &&\n        process.versions && process.versions.electron ? true : false;\n\n    // Unsupported, non-API property.\n    osc.isBufferEnv = osc.isNode || osc.isElectron;\n\n    // Unsupported, non-API function.\n    osc.isArray = function (obj) {\n        return obj && Object.prototype.toString.call(obj) === \"[object Array]\";\n    };\n\n    // Unsupported, non-API function.\n    osc.isTypedArrayView = function (obj) {\n        return obj.buffer && obj.buffer instanceof ArrayBuffer;\n    };\n\n    // Unsupported, non-API function.\n    osc.isBuffer = function (obj) {\n        return osc.isBufferEnv && obj instanceof Buffer;\n    };\n\n    // Unsupported, non-API member.\n    osc.Long = typeof Long !== \"undefined\" ? Long :\n        osc.isNode ? require(\"long\") : undefined;\n\n    // Unsupported, non-API member. Can be removed when supported versions\n    // of Node.js expose TextDecoder as a global, as in the browser.\n    osc.TextDecoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-8\") :\n        typeof util !== \"undefined\" && typeof (util.TextDecoder !== \"undefined\") ? new util.TextDecoder(\"utf-8\") : undefined;\n\n    osc.TextEncoder = typeof TextEncoder !== \"undefined\" ? new TextEncoder(\"utf-8\") :\n        typeof util !== \"undefined\" && typeof (util.TextEncoder !== \"undefined\") ? new util.TextEncoder(\"utf-8\") : undefined;\n\n    /**\n     * Wraps the specified object in a DataView.\n     *\n     * @param {Array-like} obj the object to wrap in a DataView instance\n     * @return {DataView} the DataView object\n     */\n    // Unsupported, non-API function.\n    osc.dataView = function (obj, offset, length) {\n        if (obj.buffer) {\n            return new DataView(obj.buffer, offset, length);\n        }\n\n        if (obj instanceof ArrayBuffer) {\n            return new DataView(obj, offset, length);\n        }\n\n        return new DataView(new Uint8Array(obj), offset, length);\n    };\n\n    /**\n     * Takes an ArrayBuffer, TypedArray, DataView, Buffer, or array-like object\n     * and returns a Uint8Array view of it.\n     *\n     * Throws an error if the object isn't suitably array-like.\n     *\n     * @param {Array-like or Array-wrapping} obj an array-like or array-wrapping object\n     * @returns {Uint8Array} a typed array of octets\n     */\n    // Unsupported, non-API function.\n    osc.byteArray = function (obj) {\n        if (obj instanceof Uint8Array) {\n            return obj;\n        }\n\n        var buf = obj.buffer ? obj.buffer : obj;\n\n        if (!(buf instanceof ArrayBuffer) && (typeof buf.length === \"undefined\" || typeof buf === \"string\")) {\n            throw new Error(\"Can't wrap a non-array-like object as Uint8Array. Object was: \" +\n                JSON.stringify(obj, null, 2));\n        }\n\n\n        // TODO gh-39: This is a potentially unsafe algorithm;\n        // if we're getting anything other than a TypedArrayView (such as a DataView),\n        // we really need to determine the range of the view it is viewing.\n        return new Uint8Array(buf);\n    };\n\n    /**\n     * Takes an ArrayBuffer, TypedArray, DataView, or array-like object\n     * and returns a native buffer object\n     * (i.e. in Node.js, a Buffer object and in the browser, a Uint8Array).\n     *\n     * Throws an error if the object isn't suitably array-like.\n     *\n     * @param {Array-like or Array-wrapping} obj an array-like or array-wrapping object\n     * @returns {Buffer|Uint8Array} a buffer object\n     */\n    // Unsupported, non-API function.\n    osc.nativeBuffer = function (obj) {\n        if (osc.isBufferEnv) {\n            return osc.isBuffer(obj) ? obj :\n                Buffer.from(obj.buffer ? obj : new Uint8Array(obj));\n        }\n\n        return osc.isTypedArrayView(obj) ? obj : new Uint8Array(obj);\n    };\n\n    // Unsupported, non-API function\n    osc.copyByteArray = function (source, target, offset) {\n        if (osc.isTypedArrayView(source) && osc.isTypedArrayView(target)) {\n            target.set(source, offset);\n        } else {\n            var start = offset === undefined ? 0 : offset,\n                len = Math.min(target.length - offset, source.length);\n\n            for (var i = 0, j = start; i < len; i++, j++) {\n                target[j] = source[i];\n            }\n        }\n\n        return target;\n    };\n\n    /**\n     * Reads an OSC-formatted string.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes of the OSC string\n     * @param {Object} offsetState an offsetState object used to store the current offset index\n     * @return {String} the JavaScript String that was read\n     */\n    osc.readString = function (dv, offsetState) {\n        var charCodes = [],\n            idx = offsetState.idx;\n\n        for (; idx < dv.byteLength; idx++) {\n            var charCode = dv.getUint8(idx);\n            if (charCode !== 0) {\n                charCodes.push(charCode);\n            } else {\n                idx++;\n                break;\n            }\n        }\n\n        // Round to the nearest 4-byte block.\n        idx = (idx + 3) & ~0x03;\n        offsetState.idx = idx;\n\n        var decoder = osc.isBufferEnv ? osc.readString.withBuffer :\n            osc.TextDecoder ? osc.readString.withTextDecoder : osc.readString.raw;\n\n        return decoder(charCodes);\n    };\n\n    osc.readString.raw = function (charCodes) {\n        // If no Buffer or TextDecoder, resort to fromCharCode\n        // This does not properly decode multi-byte Unicode characters.\n        var str = \"\";\n        var sliceSize = 10000;\n\n        // Processing the array in chunks so as not to exceed argument\n        // limit, see https://bugs.webkit.org/show_bug.cgi?id=80797\n        for (var i = 0; i < charCodes.length; i += sliceSize) {\n            str += String.fromCharCode.apply(null, charCodes.slice(i, i + sliceSize));\n        }\n\n        return str;\n    };\n\n    osc.readString.withTextDecoder = function (charCodes) {\n        var data = new Int8Array(charCodes);\n        return osc.TextDecoder.decode(data);\n    };\n\n    osc.readString.withBuffer = function (charCodes) {\n        return Buffer.from(charCodes).toString(\"utf-8\");\n    };\n\n    /**\n     * Writes a JavaScript string as an OSC-formatted string.\n     *\n     * @param {String} str the string to write\n     * @return {Uint8Array} a buffer containing the OSC-formatted string\n     */\n    osc.writeString = function (str) {\n\n        var encoder = osc.isBufferEnv ? osc.writeString.withBuffer :\n            osc.TextEncoder ? osc.writeString.withTextEncoder : null,\n            terminated = str + \"\\u0000\",\n            encodedStr;\n\n        if (encoder) {\n            encodedStr = encoder(terminated);\n        }\n\n        var len = encoder ? encodedStr.length : terminated.length,\n            paddedLen = (len + 3) & ~0x03,\n            arr = new Uint8Array(paddedLen);\n\n        for (var i = 0; i < len - 1; i++) {\n            var charCode = encoder ? encodedStr[i] : terminated.charCodeAt(i);\n            arr[i] = charCode;\n        }\n\n        return arr;\n    };\n\n    osc.writeString.withTextEncoder = function (str) {\n        return osc.TextEncoder.encode(str);\n    };\n\n    osc.writeString.withBuffer = function (str) {\n        return Buffer.from(str);\n    };\n\n    // Unsupported, non-API function.\n    osc.readPrimitive = function (dv, readerName, numBytes, offsetState) {\n        var val = dv[readerName](offsetState.idx, false);\n        offsetState.idx += numBytes;\n\n        return val;\n    };\n\n    // Unsupported, non-API function.\n    osc.writePrimitive = function (val, dv, writerName, numBytes, offset) {\n        offset = offset === undefined ? 0 : offset;\n\n        var arr;\n        if (!dv) {\n            arr = new Uint8Array(numBytes);\n            dv = new DataView(arr.buffer);\n        } else {\n            arr = new Uint8Array(dv.buffer);\n        }\n\n        dv[writerName](offset, val, false);\n\n        return arr;\n    };\n\n    /**\n     * Reads an OSC int32 (\"i\") value.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Number} the number that was read\n     */\n    osc.readInt32 = function (dv, offsetState) {\n        return osc.readPrimitive(dv, \"getInt32\", 4, offsetState);\n    };\n\n    /**\n     * Writes an OSC int32 (\"i\") value.\n     *\n     * @param {Number} val the number to write\n     * @param {DataView} [dv] a DataView instance to write the number into\n     * @param {Number} [offset] an offset into dv\n     */\n    osc.writeInt32 = function (val, dv, offset) {\n        return osc.writePrimitive(val, dv, \"setInt32\", 4, offset);\n    };\n\n    /**\n     * Reads an OSC int64 (\"h\") value.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Number} the number that was read\n     */\n    osc.readInt64 = function (dv, offsetState) {\n        var high = osc.readPrimitive(dv, \"getInt32\", 4, offsetState),\n            low = osc.readPrimitive(dv, \"getInt32\", 4, offsetState);\n\n        if (osc.Long) {\n            return new osc.Long(low, high);\n        } else {\n            return {\n                high: high,\n                low: low,\n                unsigned: false\n            };\n        }\n    };\n\n    /**\n     * Writes an OSC int64 (\"h\") value.\n     *\n     * @param {Number} val the number to write\n     * @param {DataView} [dv] a DataView instance to write the number into\n     * @param {Number} [offset] an offset into dv\n     */\n    osc.writeInt64 = function (val, dv, offset) {\n        var arr = new Uint8Array(8);\n        arr.set(osc.writePrimitive(val.high, dv, \"setInt32\", 4, offset), 0);\n        arr.set(osc.writePrimitive(val.low,  dv, \"setInt32\", 4, offset + 4), 4);\n        return arr;\n    };\n\n    /**\n     * Reads an OSC float32 (\"f\") value.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Number} the number that was read\n     */\n    osc.readFloat32 = function (dv, offsetState) {\n        return osc.readPrimitive(dv, \"getFloat32\", 4, offsetState);\n    };\n\n    /**\n     * Writes an OSC float32 (\"f\") value.\n     *\n     * @param {Number} val the number to write\n     * @param {DataView} [dv] a DataView instance to write the number into\n     * @param {Number} [offset] an offset into dv\n     */\n    osc.writeFloat32 = function (val, dv, offset) {\n        return osc.writePrimitive(val, dv, \"setFloat32\", 4, offset);\n    };\n\n    /**\n     * Reads an OSC float64 (\"d\") value.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Number} the number that was read\n     */\n    osc.readFloat64 = function (dv, offsetState) {\n        return osc.readPrimitive(dv, \"getFloat64\", 8, offsetState);\n    };\n\n    /**\n     * Writes an OSC float64 (\"d\") value.\n     *\n     * @param {Number} val the number to write\n     * @param {DataView} [dv] a DataView instance to write the number into\n     * @param {Number} [offset] an offset into dv\n     */\n    osc.writeFloat64 = function (val, dv, offset) {\n        return osc.writePrimitive(val, dv, \"setFloat64\", 8, offset);\n    };\n\n    /**\n     * Reads an OSC 32-bit ASCII character (\"c\") value.\n     *\n     * @param {DataView} dv a DataView containing the raw bytes\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {String} a string containing the read character\n     */\n    osc.readChar32 = function (dv, offsetState) {\n        var charCode = osc.readPrimitive(dv, \"getUint32\", 4, offsetState);\n        return String.fromCharCode(charCode);\n    };\n\n    /**\n     * Writes an OSC 32-bit ASCII character (\"c\") value.\n     *\n     * @param {String} str the string from which the first character will be written\n     * @param {DataView} [dv] a DataView instance to write the character into\n     * @param {Number} [offset] an offset into dv\n     * @return {String} a string containing the read character\n     */\n    osc.writeChar32 = function (str, dv, offset) {\n        var charCode = str.charCodeAt(0);\n        if (charCode === undefined || charCode < -1) {\n            return undefined;\n        }\n\n        return osc.writePrimitive(charCode, dv, \"setUint32\", 4, offset);\n    };\n\n    /**\n     * Reads an OSC blob (\"b\") (i.e. a Uint8Array).\n     *\n     * @param {DataView} dv a DataView instance to read from\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Uint8Array} the data that was read\n     */\n    osc.readBlob = function (dv, offsetState) {\n        var len = osc.readInt32(dv, offsetState),\n            paddedLen = (len + 3) & ~0x03,\n            blob = new Uint8Array(dv.buffer, offsetState.idx, len);\n\n        offsetState.idx += paddedLen;\n\n        return blob;\n    };\n\n    /**\n     * Writes a raw collection of bytes to a new ArrayBuffer.\n     *\n     * @param {Array-like} data a collection of octets\n     * @return {ArrayBuffer} a buffer containing the OSC-formatted blob\n     */\n    osc.writeBlob = function (data) {\n        data = osc.byteArray(data);\n\n        var len = data.byteLength,\n            paddedLen = (len + 3) & ~0x03,\n            offset = 4, // Extra 4 bytes is for the size.\n            blobLen = paddedLen + offset,\n            arr = new Uint8Array(blobLen),\n            dv = new DataView(arr.buffer);\n\n        // Write the size.\n        osc.writeInt32(len, dv);\n\n        // Since we're writing to a real ArrayBuffer,\n        // we don't need to pad the remaining bytes.\n        arr.set(data, offset);\n\n        return arr;\n    };\n\n    /**\n     * Reads an OSC 4-byte MIDI message.\n     *\n     * @param {DataView} dv the DataView instance to read from\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Uint8Array} an array containing (in order) the port ID, status, data1 and data1 bytes\n     */\n    osc.readMIDIBytes = function (dv, offsetState) {\n        var midi = new Uint8Array(dv.buffer, offsetState.idx, 4);\n        offsetState.idx += 4;\n\n        return midi;\n    };\n\n    /**\n     * Writes an OSC 4-byte MIDI message.\n     *\n     * @param {Array-like} bytes a 4-element array consisting of the port ID, status, data1 and data1 bytes\n     * @return {Uint8Array} the written message\n     */\n    osc.writeMIDIBytes = function (bytes) {\n        bytes = osc.byteArray(bytes);\n\n        var arr = new Uint8Array(4);\n        arr.set(bytes);\n\n        return arr;\n    };\n\n    /**\n     * Reads an OSC RGBA colour value.\n     *\n     * @param {DataView} dv the DataView instance to read from\n     * @param {Object} offsetState an offsetState object used to store the current offset index into dv\n     * @return {Object} a colour object containing r, g, b, and a properties\n     */\n    osc.readColor = function (dv, offsetState) {\n        var bytes = new Uint8Array(dv.buffer, offsetState.idx, 4),\n            alpha = bytes[3] / 255;\n\n        offsetState.idx += 4;\n\n        return {\n            r: bytes[0],\n            g: bytes[1],\n            b: bytes[2],\n            a: alpha\n        };\n    };\n\n    /**\n     * Writes an OSC RGBA colour value.\n     *\n     * @param {Object} color a colour object containing r, g, b, and a properties\n     * @return {Uint8Array} a byte array containing the written color\n     */\n    osc.writeColor = function (color) {\n        var alpha = Math.round(color.a * 255),\n            arr = new Uint8Array([color.r, color.g, color.b, alpha]);\n\n        return arr;\n    };\n\n    /**\n     * Reads an OSC true (\"T\") value by directly returning the JavaScript Boolean \"true\".\n     */\n    osc.readTrue = function () {\n        return true;\n    };\n\n    /**\n     * Reads an OSC false (\"F\") value by directly returning the JavaScript Boolean \"false\".\n     */\n    osc.readFalse = function () {\n        return false;\n    };\n\n    /**\n     * Reads an OSC nil (\"N\") value by directly returning the JavaScript \"null\" value.\n     */\n    osc.readNull = function () {\n        return null;\n    };\n\n    /**\n     * Reads an OSC impulse/bang/infinitum (\"I\") value by directly returning 1.0.\n     */\n    osc.readImpulse = function () {\n        return 1.0;\n    };\n\n    /**\n     * Reads an OSC time tag (\"t\").\n     *\n     * @param {DataView} dv the DataView instance to read from\n     * @param {Object} offsetState an offset state object containing the current index into dv\n     * @param {Object} a time tag object containing both the raw NTP as well as the converted native (i.e. JS/UNIX) time\n     */\n    osc.readTimeTag = function (dv, offsetState) {\n        var secs1900 = osc.readPrimitive(dv, \"getUint32\", 4, offsetState),\n            frac = osc.readPrimitive(dv, \"getUint32\", 4, offsetState),\n            native = (secs1900 === 0 && frac === 1) ? Date.now() : osc.ntpToJSTime(secs1900, frac);\n\n        return {\n            raw: [secs1900, frac],\n            native: native\n        };\n    };\n\n    /**\n     * Writes an OSC time tag (\"t\").\n     *\n     * Takes, as its argument, a time tag object containing either a \"raw\" or \"native property.\"\n     * The raw timestamp must conform to the NTP standard representation, consisting of two unsigned int32\n     * values. The first represents the number of seconds since January 1, 1900; the second, fractions of a second.\n     * \"Native\" JavaScript timestamps are specified as a Number representing milliseconds since January 1, 1970.\n     *\n     * @param {Object} timeTag time tag object containing either a native JS timestamp (in ms) or a NTP timestamp pair\n     * @return {Uint8Array} raw bytes for the written time tag\n     */\n    osc.writeTimeTag = function (timeTag) {\n        var raw = timeTag.raw ? timeTag.raw : osc.jsToNTPTime(timeTag.native),\n            arr = new Uint8Array(8), // Two Unit32s.\n            dv = new DataView(arr.buffer);\n\n        osc.writeInt32(raw[0], dv, 0);\n        osc.writeInt32(raw[1], dv, 4);\n\n        return arr;\n    };\n\n    /**\n     * Produces a time tag containing a raw NTP timestamp\n     * relative to now by the specified number of seconds.\n     *\n     * @param {Number} secs the number of seconds relative to now (i.e. + for the future, - for the past)\n     * @param {Number} now the number of milliseconds since epoch to use as the current time. Defaults to Date.now()\n     * @return {Object} the time tag\n     */\n    osc.timeTag = function (secs, now) {\n        secs = secs || 0;\n        now = now || Date.now();\n\n        var nowSecs = now / 1000,\n            nowWhole = Math.floor(nowSecs),\n            nowFracs = nowSecs - nowWhole,\n            secsWhole = Math.floor(secs),\n            secsFracs = secs - secsWhole,\n            fracs = nowFracs + secsFracs;\n\n        if (fracs > 1) {\n            var fracsWhole = Math.floor(fracs),\n                fracsFracs = fracs - fracsWhole;\n\n            secsWhole += fracsWhole;\n            fracs = fracsFracs;\n        }\n\n        var ntpSecs = nowWhole + secsWhole + osc.SECS_70YRS,\n            ntpFracs = Math.round(osc.TWO_32 * fracs);\n\n        return {\n            raw: [ntpSecs, ntpFracs]\n        };\n    };\n\n    /**\n     * Converts OSC's standard time tag representation (which is the NTP format)\n     * into the JavaScript/UNIX format in milliseconds.\n     *\n     * @param {Number} secs1900 the number of seconds since 1900\n     * @param {Number} frac the number of fractions of a second (between 0 and 2^32)\n     * @return {Number} a JavaScript-compatible timestamp in milliseconds\n     */\n    osc.ntpToJSTime = function (secs1900, frac) {\n        var secs1970 = secs1900 - osc.SECS_70YRS,\n            decimals = frac / osc.TWO_32,\n            msTime = (secs1970 + decimals) * 1000;\n\n        return msTime;\n    };\n\n    osc.jsToNTPTime = function (jsTime) {\n        var secs = jsTime / 1000,\n            secsWhole = Math.floor(secs),\n            secsFrac = secs - secsWhole,\n            ntpSecs = secsWhole + osc.SECS_70YRS,\n            ntpFracs = Math.round(osc.TWO_32 * secsFrac);\n\n        return [ntpSecs, ntpFracs];\n    };\n\n    /**\n     * Reads the argument portion of an OSC message.\n     *\n     * @param {DataView} dv a DataView instance to read from\n     * @param {Object} offsetState the offsetState object that stores the current offset into dv\n     * @param {Object} [options] read options\n     * @return {Array} an array of the OSC arguments that were read\n     */\n    osc.readArguments = function (dv, options, offsetState) {\n        var typeTagString = osc.readString(dv, offsetState);\n        if (typeTagString.indexOf(\",\") !== 0) {\n            // Despite what the OSC 1.0 spec says,\n            // it just doesn't make sense to handle messages without type tags.\n            // scsynth appears to read such messages as if they have a single\n            // Uint8 argument. sclang throws an error if the type tag is omitted.\n            throw new Error(\"A malformed type tag string was found while reading \" +\n                \"the arguments of an OSC message. String was: \" +\n                typeTagString, \" at offset: \" + offsetState.idx);\n        }\n\n        var argTypes = typeTagString.substring(1).split(\"\"),\n            args = [];\n\n        osc.readArgumentsIntoArray(args, argTypes, typeTagString, dv, options, offsetState);\n\n        return args;\n    };\n\n    // Unsupported, non-API function.\n    osc.readArgument = function (argType, typeTagString, dv, options, offsetState) {\n        var typeSpec = osc.argumentTypes[argType];\n        if (!typeSpec) {\n            throw new Error(\"'\" + argType + \"' is not a valid OSC type tag. Type tag string was: \" + typeTagString);\n        }\n\n        var argReader = typeSpec.reader,\n            arg = osc[argReader](dv, offsetState);\n\n        if (options.metadata) {\n            arg = {\n                type: argType,\n                value: arg\n            };\n        }\n\n        return arg;\n    };\n\n    // Unsupported, non-API function.\n    osc.readArgumentsIntoArray = function (arr, argTypes, typeTagString, dv, options, offsetState) {\n        var i = 0;\n\n        while (i < argTypes.length) {\n            var argType = argTypes[i],\n                arg;\n\n            if (argType === \"[\") {\n                var fromArrayOpen = argTypes.slice(i + 1),\n                    endArrayIdx = fromArrayOpen.indexOf(\"]\");\n\n                if (endArrayIdx < 0) {\n                    throw new Error(\"Invalid argument type tag: an open array type tag ('[') was found \" +\n                        \"without a matching close array tag ('[]'). Type tag was: \" + typeTagString);\n                }\n\n                var typesInArray = fromArrayOpen.slice(0, endArrayIdx);\n                arg = osc.readArgumentsIntoArray([], typesInArray, typeTagString, dv, options, offsetState);\n                i += endArrayIdx + 2;\n            } else {\n                arg = osc.readArgument(argType, typeTagString, dv, options, offsetState);\n                i++;\n            }\n\n            arr.push(arg);\n        }\n\n        return arr;\n    };\n\n    /**\n     * Writes the specified arguments.\n     *\n     * @param {Array} args an array of arguments\n     * @param {Object} options options for writing\n     * @return {Uint8Array} a buffer containing the OSC-formatted argument type tag and values\n     */\n    osc.writeArguments = function (args, options) {\n        var argCollection = osc.collectArguments(args, options);\n        return osc.joinParts(argCollection);\n    };\n\n    // Unsupported, non-API function.\n    osc.joinParts = function (dataCollection) {\n        var buf = new Uint8Array(dataCollection.byteLength),\n            parts = dataCollection.parts,\n            offset = 0;\n\n        for (var i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            osc.copyByteArray(part, buf, offset);\n            offset += part.length;\n        }\n\n        return buf;\n    };\n\n    // Unsupported, non-API function.\n    osc.addDataPart = function (dataPart, dataCollection) {\n        dataCollection.parts.push(dataPart);\n        dataCollection.byteLength += dataPart.length;\n    };\n\n    osc.writeArrayArguments = function (args, dataCollection) {\n        var typeTag = \"[\";\n\n        for (var i = 0; i < args.length; i++) {\n            var arg = args[i];\n            typeTag += osc.writeArgument(arg, dataCollection);\n        }\n\n        typeTag += \"]\";\n\n        return typeTag;\n    };\n\n    osc.writeArgument = function (arg, dataCollection) {\n        if (osc.isArray(arg)) {\n            return osc.writeArrayArguments(arg, dataCollection);\n        }\n\n        var type = arg.type,\n            writer = osc.argumentTypes[type].writer;\n\n        if (writer) {\n            var data = osc[writer](arg.value);\n            osc.addDataPart(data, dataCollection);\n        }\n\n        return arg.type;\n    };\n\n    // Unsupported, non-API function.\n    osc.collectArguments = function (args, options, dataCollection) {\n        if (!osc.isArray(args)) {\n            args = typeof args === \"undefined\" ? [] : [args];\n        }\n\n        dataCollection = dataCollection || {\n            byteLength: 0,\n            parts: []\n        };\n\n        if (!options.metadata) {\n            args = osc.annotateArguments(args);\n        }\n\n        var typeTagString = \",\",\n            currPartIdx = dataCollection.parts.length;\n\n        for (var i = 0; i < args.length; i++) {\n            var arg = args[i];\n            typeTagString += osc.writeArgument(arg, dataCollection);\n        }\n\n        var typeData = osc.writeString(typeTagString);\n        dataCollection.byteLength += typeData.byteLength;\n        dataCollection.parts.splice(currPartIdx, 0, typeData);\n\n        return dataCollection;\n    };\n\n    /**\n     * Reads an OSC message.\n     *\n     * @param {Array-like} data an array of bytes to read from\n     * @param {Object} [options] read options\n     * @param {Object} [offsetState] an offsetState object that stores the current offset into dv\n     * @return {Object} the OSC message, formatted as a JavaScript object containing \"address\" and \"args\" properties\n     */\n    osc.readMessage = function (data, options, offsetState) {\n        options = options || osc.defaults;\n\n        var dv = osc.dataView(data, data.byteOffset, data.byteLength);\n        offsetState = offsetState || {\n            idx: 0\n        };\n\n        var address = osc.readString(dv, offsetState);\n        return osc.readMessageContents(address, dv, options, offsetState);\n    };\n\n    // Unsupported, non-API function.\n    osc.readMessageContents = function (address, dv, options, offsetState) {\n        if (address.indexOf(\"/\") !== 0) {\n            throw new Error(\"A malformed OSC address was found while reading \" +\n                \"an OSC message. String was: \" + address);\n        }\n\n        var args = osc.readArguments(dv, options, offsetState);\n\n        return {\n            address: address,\n            args: args.length === 1 && options.unpackSingleArgs ? args[0] : args\n        };\n    };\n\n    // Unsupported, non-API function.\n    osc.collectMessageParts = function (msg, options, dataCollection) {\n        dataCollection = dataCollection || {\n            byteLength: 0,\n            parts: []\n        };\n\n        osc.addDataPart(osc.writeString(msg.address), dataCollection);\n        return osc.collectArguments(msg.args, options, dataCollection);\n    };\n\n    /**\n     * Writes an OSC message.\n     *\n     * @param {Object} msg a message object containing \"address\" and \"args\" properties\n     * @param {Object} [options] write options\n     * @return {Uint8Array} an array of bytes containing the OSC message\n     */\n    osc.writeMessage = function (msg, options) {\n        options = options || osc.defaults;\n\n        if (!osc.isValidMessage(msg)) {\n            throw new Error(\"An OSC message must contain a valid address. Message was: \" +\n                JSON.stringify(msg, null, 2));\n        }\n\n        var msgCollection = osc.collectMessageParts(msg, options);\n        return osc.joinParts(msgCollection);\n    };\n\n    osc.isValidMessage = function (msg) {\n        return msg.address && msg.address.indexOf(\"/\") === 0;\n    };\n\n    /**\n     * Reads an OSC bundle.\n     *\n     * @param {DataView} dv the DataView instance to read from\n     * @param {Object} [options] read optoins\n     * @param {Object} [offsetState] an offsetState object that stores the current offset into dv\n     * @return {Object} the bundle or message object that was read\n     */\n    osc.readBundle = function (dv, options, offsetState) {\n        return osc.readPacket(dv, options, offsetState);\n    };\n\n    // Unsupported, non-API function.\n    osc.collectBundlePackets = function (bundle, options, dataCollection) {\n        dataCollection = dataCollection || {\n            byteLength: 0,\n            parts: []\n        };\n\n        osc.addDataPart(osc.writeString(\"#bundle\"), dataCollection);\n        osc.addDataPart(osc.writeTimeTag(bundle.timeTag), dataCollection);\n\n        for (var i = 0; i < bundle.packets.length; i++) {\n            var packet = bundle.packets[i],\n                collector = packet.address ? osc.collectMessageParts : osc.collectBundlePackets,\n                packetCollection = collector(packet, options);\n\n            dataCollection.byteLength += packetCollection.byteLength;\n            osc.addDataPart(osc.writeInt32(packetCollection.byteLength), dataCollection);\n            dataCollection.parts = dataCollection.parts.concat(packetCollection.parts);\n        }\n\n        return dataCollection;\n    };\n\n    /**\n     * Writes an OSC bundle.\n     *\n     * @param {Object} a bundle object containing \"timeTag\" and \"packets\" properties\n     * @param {object} [options] write options\n     * @return {Uint8Array} an array of bytes containing the message\n     */\n    osc.writeBundle = function (bundle, options) {\n        if (!osc.isValidBundle(bundle)) {\n            throw new Error(\"An OSC bundle must contain 'timeTag' and 'packets' properties. \" +\n                \"Bundle was: \" + JSON.stringify(bundle, null, 2));\n        }\n\n        options = options || osc.defaults;\n        var bundleCollection = osc.collectBundlePackets(bundle, options);\n\n        return osc.joinParts(bundleCollection);\n    };\n\n    osc.isValidBundle = function (bundle) {\n        return bundle.timeTag !== undefined && bundle.packets !== undefined;\n    };\n\n    // Unsupported, non-API function.\n    osc.readBundleContents = function (dv, options, offsetState, len) {\n        var timeTag = osc.readTimeTag(dv, offsetState),\n            packets = [];\n\n        while (offsetState.idx < len) {\n            var packetSize = osc.readInt32(dv, offsetState),\n                packetLen = offsetState.idx + packetSize,\n                packet = osc.readPacket(dv, options, offsetState, packetLen);\n\n            packets.push(packet);\n        }\n\n        return {\n            timeTag: timeTag,\n            packets: packets\n        };\n    };\n\n    /**\n     * Reads an OSC packet, which may consist of either a bundle or a message.\n     *\n     * @param {Array-like} data an array of bytes to read from\n     * @param {Object} [options] read options\n     * @return {Object} a bundle or message object\n     */\n    osc.readPacket = function (data, options, offsetState, len) {\n        var dv = osc.dataView(data, data.byteOffset, data.byteLength);\n\n        len = len === undefined ? dv.byteLength : len;\n        offsetState = offsetState || {\n            idx: 0\n        };\n\n        var header = osc.readString(dv, offsetState),\n            firstChar = header[0];\n\n        if (firstChar === \"#\") {\n            return osc.readBundleContents(dv, options, offsetState, len);\n        } else if (firstChar === \"/\") {\n            return osc.readMessageContents(header, dv, options, offsetState);\n        }\n\n        throw new Error(\"The header of an OSC packet didn't contain an OSC address or a #bundle string.\" +\n            \" Header was: \" + header);\n    };\n\n    /**\n     * Writes an OSC packet, which may consist of either of a bundle or a message.\n     *\n     * @param {Object} a bundle or message object\n     * @param {Object} [options] write options\n     * @return {Uint8Array} an array of bytes containing the message\n     */\n    osc.writePacket = function (packet, options) {\n        if (osc.isValidMessage(packet)) {\n            return osc.writeMessage(packet, options);\n        } else if (osc.isValidBundle(packet)) {\n            return osc.writeBundle(packet, options);\n        } else {\n            throw new Error(\"The specified packet was not recognized as a valid OSC message or bundle.\" +\n                \" Packet was: \" + JSON.stringify(packet, null, 2));\n        }\n    };\n\n    // Unsupported, non-API.\n    osc.argumentTypes = {\n        i: {\n            reader: \"readInt32\",\n            writer: \"writeInt32\"\n        },\n        h: {\n            reader: \"readInt64\",\n            writer: \"writeInt64\"\n        },\n        f: {\n            reader: \"readFloat32\",\n            writer: \"writeFloat32\"\n        },\n        s: {\n            reader: \"readString\",\n            writer: \"writeString\"\n        },\n        S: {\n            reader: \"readString\",\n            writer: \"writeString\"\n        },\n        b: {\n            reader: \"readBlob\",\n            writer: \"writeBlob\"\n        },\n        t: {\n            reader: \"readTimeTag\",\n            writer: \"writeTimeTag\"\n        },\n        T: {\n            reader: \"readTrue\"\n        },\n        F: {\n            reader: \"readFalse\"\n        },\n        N: {\n            reader: \"readNull\"\n        },\n        I: {\n            reader: \"readImpulse\"\n        },\n        d: {\n            reader: \"readFloat64\",\n            writer: \"writeFloat64\"\n        },\n        c: {\n            reader: \"readChar32\",\n            writer: \"writeChar32\"\n        },\n        r: {\n            reader: \"readColor\",\n            writer: \"writeColor\"\n        },\n        m: {\n            reader: \"readMIDIBytes\",\n            writer: \"writeMIDIBytes\"\n        },\n        // [] are special cased within read/writeArguments()\n    };\n\n    // Unsupported, non-API function.\n    osc.inferTypeForArgument = function (arg) {\n        var type = typeof arg;\n\n        // TODO: This is freaking hideous.\n        switch (type) {\n            case \"boolean\":\n                return arg ? \"T\" : \"F\";\n            case \"string\":\n                return \"s\";\n            case \"number\":\n                return \"f\";\n            case \"undefined\":\n                return \"N\";\n            case \"object\":\n                if (arg === null) {\n                    return \"N\";\n                } else if (arg instanceof Uint8Array ||\n                    arg instanceof ArrayBuffer) {\n                    return \"b\";\n                } else if (typeof arg.high === \"number\" && typeof arg.low === \"number\") {\n                    return \"h\";\n                }\n                break;\n        }\n\n        throw new Error(\"Can't infer OSC argument type for value: \" +\n            JSON.stringify(arg, null, 2));\n    };\n\n    // Unsupported, non-API function.\n    osc.annotateArguments = function (args) {\n        var annotated = [];\n\n        for (var i = 0; i < args.length; i++) {\n            var arg = args[i],\n                msgArg;\n\n            if (typeof (arg) === \"object\" && arg.type && arg.value !== undefined) {\n                // We've got an explicitly typed argument.\n                msgArg = arg;\n            } else if (osc.isArray(arg)) {\n                // We've got an array of arguments,\n                // so they each need to be inferred and expanded.\n                msgArg = osc.annotateArguments(arg);\n            } else {\n                var oscType = osc.inferTypeForArgument(arg);\n                msgArg = {\n                    type: oscType,\n                    value: arg\n                };\n            }\n\n            annotated.push(msgArg);\n        }\n\n        return annotated;\n    };\n\n    if (osc.isCommonJS) {\n        module.exports = osc;\n    }\n}());\n", "/*\n * slip.js: A plain JavaScript SLIP implementation that works in both the browser and Node.js\n *\n * Copyright 2014, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/*global exports, define*/\n(function (root, factory) {\n    \"use strict\";\n\n    if (typeof exports === \"object\") {\n        // We're in a CommonJS-style loader.\n        root.slip = exports;\n        factory(exports);\n    } else if (typeof define === \"function\" && define.amd) {\n        // We're in an AMD-style loader.\n        define([\"exports\"], function (exports) {\n            root.slip = exports;\n            return (root.slip, factory(exports));\n        });\n    } else {\n        // Plain old browser.\n        root.slip = {};\n        factory(root.slip);\n    }\n}(this, function (exports) {\n\n    \"use strict\";\n\n    var slip = exports;\n\n    slip.END = 192;\n    slip.ESC = 219;\n    slip.ESC_END = 220;\n    slip.ESC_ESC = 221;\n\n    slip.byteArray = function (data, offset, length) {\n        return data instanceof ArrayBuffer ? new Uint8Array(data, offset, length) : data;\n    };\n\n    slip.expandByteArray = function (arr) {\n        var expanded = new Uint8Array(arr.length * 2);\n        expanded.set(arr);\n\n        return expanded;\n    };\n\n    slip.sliceByteArray = function (arr, start, end) {\n        var sliced = arr.buffer.slice ? arr.buffer.slice(start, end) : arr.subarray(start, end);\n        return new Uint8Array(sliced);\n    };\n\n    /**\n     * SLIP encodes a byte array.\n     *\n     * @param {Array-like} data a Uint8Array, Node.js Buffer, ArrayBuffer, or [] containing raw bytes\n     * @param {Object} options encoder options\n     * @return {Uint8Array} the encoded copy of the data\n     */\n    slip.encode = function (data, o) {\n        o = o || {};\n        o.bufferPadding = o.bufferPadding || 4; // Will be rounded to the nearest 4 bytes.\n        data = slip.byteArray(data, o.offset, o.byteLength);\n\n        var bufLen = (data.length + o.bufferPadding + 3) & ~0x03,\n            encoded = new Uint8Array(bufLen),\n            j = 1;\n\n        encoded[0] = slip.END;\n\n        for (var i = 0; i < data.length; i++) {\n            // We always need enough space for two value bytes plus a trailing END.\n            if (j > encoded.length - 3) {\n                encoded = slip.expandByteArray(encoded);\n            }\n\n            var val = data[i];\n            if (val === slip.END) {\n                encoded[j++] = slip.ESC;\n                val = slip.ESC_END;\n            } else if (val === slip.ESC) {\n                encoded[j++] = slip.ESC;\n                val = slip.ESC_ESC;\n            }\n\n            encoded[j++] = val;\n        }\n\n        encoded[j] = slip.END;\n        return slip.sliceByteArray(encoded, 0, j + 1);\n    };\n\n    /**\n     * Creates a new SLIP Decoder.\n     * @constructor\n     *\n     * @param {Function} onMessage a callback function that will be invoked when a message has been fully decoded\n     * @param {Number} maxBufferSize the maximum size of a incoming message; larger messages will throw an error\n     */\n    slip.Decoder = function (o) {\n        o = typeof o !== \"function\" ? o || {} : {\n            onMessage: o\n        };\n\n        this.maxMessageSize = o.maxMessageSize || 10485760; // Defaults to 10 MB.\n        this.bufferSize = o.bufferSize || 1024; // Message buffer defaults to 1 KB.\n        this.msgBuffer = new Uint8Array(this.bufferSize);\n        this.msgBufferIdx = 0;\n        this.onMessage = o.onMessage;\n        this.onError = o.onError;\n        this.escape = false;\n    };\n\n    var p = slip.Decoder.prototype;\n\n    /**\n     * Decodes a SLIP data packet.\n     * The onMessage callback will be invoked when a complete message has been decoded.\n     *\n     * @param {Array-like} data an incoming stream of bytes\n     */\n    p.decode = function (data) {\n        data = slip.byteArray(data);\n\n        var msg;\n        for (var i = 0; i < data.length; i++) {\n            var val = data[i];\n\n            if (this.escape) {\n                if (val === slip.ESC_ESC) {\n                    val = slip.ESC;\n                } else if (val === slip.ESC_END) {\n                    val = slip.END;\n                }\n            } else {\n                if (val === slip.ESC) {\n                    this.escape = true;\n                    continue;\n                }\n\n                if (val === slip.END) {\n                    msg = this.handleEnd();\n                    continue;\n                }\n            }\n\n            var more = this.addByte(val);\n            if (!more) {\n                this.handleMessageMaxError();\n            }\n        }\n\n        return msg;\n    };\n\n    p.handleMessageMaxError = function () {\n        if (this.onError) {\n            this.onError(this.msgBuffer.subarray(0),\n                \"The message is too large; the maximum message size is \" +\n                this.maxMessageSize / 1024 + \"KB. Use a larger maxMessageSize if necessary.\");\n        }\n\n        // Reset everything and carry on.\n        this.msgBufferIdx = 0;\n        this.escape = false;\n    };\n\n    // Unsupported, non-API method.\n    p.addByte = function (val) {\n        if (this.msgBufferIdx > this.msgBuffer.length - 1) {\n            this.msgBuffer = slip.expandByteArray(this.msgBuffer);\n        }\n\n        this.msgBuffer[this.msgBufferIdx++] = val;\n        this.escape = false;\n\n        return this.msgBuffer.length < this.maxMessageSize;\n    };\n\n    // Unsupported, non-API method.\n    p.handleEnd = function () {\n        if (this.msgBufferIdx === 0) {\n            return; // Toss opening END byte and carry on.\n        }\n\n        var msg = slip.sliceByteArray(this.msgBuffer, 0, this.msgBufferIdx);\n        if (this.onMessage) {\n            this.onMessage(msg);\n        }\n\n        // Clear our pointer into the message buffer.\n        this.msgBufferIdx = 0;\n\n        return msg;\n    };\n\n    return slip;\n}));\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"events\" has been externalized for browser compatibility. Cannot access \"events.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Cross-platform base transport library for osc.js.\n *\n * Copyright 2014-2016, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/* global require, module */\n\nvar osc = osc || require(\"./osc.js\"),\n    slip = slip || require(\"slip\"),\n    EventEmitter = EventEmitter || require(\"events\").EventEmitter;\n\n(function () {\n\n    \"use strict\";\n\n    osc.supportsSerial = false;\n\n    // Unsupported, non-API function.\n    osc.firePacketEvents = function (port, packet, timeTag, packetInfo) {\n        if (packet.address) {\n            port.emit(\"message\", packet, timeTag, packetInfo);\n        } else {\n            osc.fireBundleEvents(port, packet, timeTag, packetInfo);\n        }\n    };\n\n    // Unsupported, non-API function.\n    osc.fireBundleEvents = function (port, bundle, timeTag, packetInfo) {\n        port.emit(\"bundle\", bundle, timeTag, packetInfo);\n        for (var i = 0; i < bundle.packets.length; i++) {\n            var packet = bundle.packets[i];\n            osc.firePacketEvents(port, packet, bundle.timeTag, packetInfo);\n        }\n    };\n\n    osc.fireClosedPortSendError = function (port, msg) {\n        msg = msg || \"Can't send packets on a closed osc.Port object. Please open (or reopen) this Port by calling open().\";\n\n        port.emit(\"error\", msg);\n    };\n\n    osc.Port = function (options) {\n        this.options = options || {};\n        this.on(\"data\", this.decodeOSC.bind(this));\n    };\n\n    var p = osc.Port.prototype = Object.create(EventEmitter.prototype);\n    p.constructor = osc.Port;\n\n    p.send = function (oscPacket) {\n        var args = Array.prototype.slice.call(arguments),\n            encoded = this.encodeOSC(oscPacket),\n            buf = osc.nativeBuffer(encoded);\n\n        args[0] = buf;\n        this.sendRaw.apply(this, args);\n    };\n\n    p.encodeOSC = function (packet) {\n        // TODO gh-39: This is unsafe; we should only access the underlying\n        // buffer within the range of its view.\n        packet = packet.buffer ? packet.buffer : packet;\n        var encoded;\n\n        try {\n            encoded = osc.writePacket(packet, this.options);\n        } catch (err) {\n            this.emit(\"error\", err);\n        }\n\n        return encoded;\n    };\n\n    p.decodeOSC = function (data, packetInfo) {\n        data = osc.byteArray(data);\n        this.emit(\"raw\", data, packetInfo);\n\n        try {\n            var packet = osc.readPacket(data, this.options);\n            this.emit(\"osc\", packet, packetInfo);\n            osc.firePacketEvents(this, packet, undefined, packetInfo);\n        } catch (err) {\n            this.emit(\"error\", err);\n        }\n    };\n\n\n    osc.SLIPPort = function (options) {\n        var that = this;\n        var o = this.options = options || {};\n        o.useSLIP = o.useSLIP === undefined ? true : o.useSLIP;\n\n        this.decoder = new slip.Decoder({\n            onMessage: this.decodeOSC.bind(this),\n            onError: function (err) {\n                that.emit(\"error\", err);\n            }\n        });\n\n        var decodeHandler = o.useSLIP ? this.decodeSLIPData : this.decodeOSC;\n        this.on(\"data\", decodeHandler.bind(this));\n    };\n\n    p = osc.SLIPPort.prototype = Object.create(osc.Port.prototype);\n    p.constructor = osc.SLIPPort;\n\n    p.encodeOSC = function (packet) {\n        // TODO gh-39: This is unsafe; we should only access the underlying\n        // buffer within the range of its view.\n        packet = packet.buffer ? packet.buffer : packet;\n        var framed;\n\n        try {\n            var encoded = osc.writePacket(packet, this.options);\n            framed = slip.encode(encoded);\n        } catch (err) {\n            this.emit(\"error\", err);\n        }\n\n        return framed;\n    };\n\n    p.decodeSLIPData = function (data, packetInfo) {\n        // TODO: Get packetInfo through SLIP decoder.\n        this.decoder.decode(data, packetInfo);\n    };\n\n\n    // Unsupported, non-API function.\n    osc.relay = function (from, to, eventName, sendFnName, transformFn, sendArgs) {\n        eventName = eventName || \"message\";\n        sendFnName = sendFnName || \"send\";\n        transformFn = transformFn || function () {};\n        sendArgs = sendArgs ? [null].concat(sendArgs) : [];\n\n        var listener = function (data) {\n            sendArgs[0] = data;\n            data = transformFn(data);\n            to[sendFnName].apply(to, sendArgs);\n        };\n\n        from.on(eventName, listener);\n\n        return {\n            eventName: eventName,\n            listener: listener\n        };\n    };\n\n    // Unsupported, non-API function.\n    osc.relayPorts = function (from, to, o) {\n        var eventName = o.raw ? \"raw\" : \"osc\",\n            sendFnName = o.raw ? \"sendRaw\" : \"send\";\n\n        return osc.relay(from, to, eventName, sendFnName, o.transform);\n    };\n\n    // Unsupported, non-API function.\n    osc.stopRelaying = function (from, relaySpec) {\n        from.removeListener(relaySpec.eventName, relaySpec.listener);\n    };\n\n\n    /**\n     * A Relay connects two sources of OSC data together,\n     * relaying all OSC messages received by each port to the other.\n     * @constructor\n     *\n     * @param {osc.Port} port1 the first port to relay\n     * @param {osc.Port} port2 the second port to relay\n     * @param {Object} options the configuration options for this relay\n     */\n    osc.Relay = function (port1, port2, options) {\n        var o = this.options = options || {};\n        o.raw = false;\n\n        this.port1 = port1;\n        this.port2 = port2;\n\n        this.listen();\n    };\n\n    p = osc.Relay.prototype = Object.create(EventEmitter.prototype);\n    p.constructor = osc.Relay;\n\n    p.open = function () {\n        this.port1.open();\n        this.port2.open();\n    };\n\n    p.listen = function () {\n        if (this.port1Spec && this.port2Spec) {\n            this.close();\n        }\n\n        this.port1Spec = osc.relayPorts(this.port1, this.port2, this.options);\n        this.port2Spec = osc.relayPorts(this.port2, this.port1, this.options);\n\n        // Bind port close listeners to ensure that the relay\n        // will stop forwarding messages if one of its ports close.\n        // Users are still responsible for closing the underlying ports\n        // if necessary.\n        var closeListener = this.close.bind(this);\n        this.port1.on(\"close\", closeListener);\n        this.port2.on(\"close\", closeListener);\n    };\n\n    p.close = function () {\n        osc.stopRelaying(this.port1, this.port1Spec);\n        osc.stopRelaying(this.port2, this.port2Spec);\n        this.emit(\"close\", this.port1, this.port2);\n    };\n\n\n    // If we're in a require-compatible environment, export ourselves.\n    if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = osc;\n    }\n}());\n", "/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Cross-Platform Web Socket client transport for osc.js.\n *\n * Copyright 2014-2016, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/*global WebSocket, require*/\n\nvar osc = osc || require(\"../osc.js\");\n\n(function () {\n\n    \"use strict\";\n\n    osc.WebSocket = typeof WebSocket !== \"undefined\" ? WebSocket : require (\"ws\");\n\n    osc.WebSocketPort = function (options) {\n        osc.Port.call(this, options);\n        this.on(\"open\", this.listen.bind(this));\n\n        this.socket = options.socket;\n        if (this.socket) {\n            if (this.socket.readyState === 1) {\n                osc.WebSocketPort.setupSocketForBinary(this.socket);\n                this.emit(\"open\", this.socket);\n            } else {\n                this.open();\n            }\n        }\n    };\n\n    var p = osc.WebSocketPort.prototype = Object.create(osc.Port.prototype);\n    p.constructor = osc.WebSocketPort;\n\n    p.open = function () {\n        if (!this.socket || this.socket.readyState > 1) {\n            this.socket = new osc.WebSocket(this.options.url);\n        }\n\n        osc.WebSocketPort.setupSocketForBinary(this.socket);\n\n        var that = this;\n        this.socket.onopen = function () {\n            that.emit(\"open\", that.socket);\n        };\n\n        this.socket.onerror = function (err) {\n            that.emit(\"error\", err);\n        };\n    };\n\n    p.listen = function () {\n        var that = this;\n        this.socket.onmessage = function (e) {\n            that.emit(\"data\", e.data, e);\n        };\n\n        this.socket.onclose = function (e) {\n            that.emit(\"close\", e);\n        };\n\n        that.emit(\"ready\");\n    };\n\n    p.sendRaw = function (encoded) {\n        if (!this.socket || this.socket.readyState !== 1) {\n            osc.fireClosedPortSendError(this);\n            return;\n        }\n\n        this.socket.send(encoded);\n    };\n\n    p.close = function (code, reason) {\n        this.socket.close(code, reason);\n    };\n\n    osc.WebSocketPort.setupSocketForBinary = function (socket) {\n        socket.binaryType = osc.isNode ? \"nodebuffer\" : \"arraybuffer\";\n    };\n\n}());\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"stream\" has been externalized for browser compatibility. Cannot access \"stream.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ByteLengthParser = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * Emit data every number of bytes\n *\n * A transform stream that emits data as a buffer after a specific number of bytes are received. Runs in O(n) time.\n */\nclass ByteLengthParser extends stream_1.Transform {\n    constructor(options) {\n        super(options);\n        if (typeof options.length !== 'number') {\n            throw new TypeError('\"length\" is not a number');\n        }\n        if (options.length < 1) {\n            throw new TypeError('\"length\" is not greater than 0');\n        }\n        this.length = options.length;\n        this.position = 0;\n        this.buffer = Buffer.alloc(this.length);\n    }\n    _transform(chunk, _encoding, cb) {\n        let cursor = 0;\n        while (cursor < chunk.length) {\n            this.buffer[this.position] = chunk[cursor];\n            cursor++;\n            this.position++;\n            if (this.position === this.length) {\n                this.push(this.buffer);\n                this.buffer = Buffer.alloc(this.length);\n                this.position = 0;\n            }\n        }\n        cb();\n    }\n    _flush(cb) {\n        this.push(this.buffer.slice(0, this.position));\n        this.buffer = Buffer.alloc(this.length);\n        cb();\n    }\n}\nexports.ByteLengthParser = ByteLengthParser;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CCTalkParser = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * Parse the CCTalk protocol\n * @extends Transform\n *\n * A transform stream that emits CCTalk packets as they are received.\n */\nclass CCTalkParser extends stream_1.Transform {\n    constructor(maxDelayBetweenBytesMs = 50) {\n        super();\n        this.array = [];\n        this.cursor = 0;\n        this.lastByteFetchTime = 0;\n        this.maxDelayBetweenBytesMs = maxDelayBetweenBytesMs;\n    }\n    _transform(buffer, encoding, cb) {\n        if (this.maxDelayBetweenBytesMs > 0) {\n            const now = Date.now();\n            if (now - this.lastByteFetchTime > this.maxDelayBetweenBytesMs) {\n                this.array = [];\n                this.cursor = 0;\n            }\n            this.lastByteFetchTime = now;\n        }\n        this.cursor += buffer.length;\n        // TODO: Better Faster es7 no supported by node 4\n        // ES7 allows directly push [...buffer]\n        // this.array = this.array.concat(Array.from(buffer)) //Slower ?!?\n        Array.from(buffer).map(byte => this.array.push(byte));\n        while (this.cursor > 1 && this.cursor >= this.array[1] + 5) {\n            // full frame accumulated\n            // copy command from the array\n            const FullMsgLength = this.array[1] + 5;\n            const frame = Buffer.from(this.array.slice(0, FullMsgLength));\n            // Preserve Extra Data\n            this.array = this.array.slice(frame.length, this.array.length);\n            this.cursor -= FullMsgLength;\n            this.push(frame);\n        }\n        cb();\n    }\n}\nexports.CCTalkParser = CCTalkParser;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DelimiterParser = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * A transform stream that emits data each time a byte sequence is received.\n * @extends Transform\n *\n * To use the `Delimiter` parser, provide a delimiter as a string, buffer, or array of bytes. Runs in O(n) time.\n */\nclass DelimiterParser extends stream_1.Transform {\n    constructor({ delimiter, includeDelimiter = false, ...options }) {\n        super(options);\n        if (delimiter === undefined) {\n            throw new TypeError('\"delimiter\" is not a bufferable object');\n        }\n        if (delimiter.length === 0) {\n            throw new TypeError('\"delimiter\" has a 0 or undefined length');\n        }\n        this.includeDelimiter = includeDelimiter;\n        this.delimiter = Buffer.from(delimiter);\n        this.buffer = Buffer.alloc(0);\n    }\n    _transform(chunk, encoding, cb) {\n        let data = Buffer.concat([this.buffer, chunk]);\n        let position;\n        while ((position = data.indexOf(this.delimiter)) !== -1) {\n            this.push(data.slice(0, position + (this.includeDelimiter ? this.delimiter.length : 0)));\n            data = data.slice(position + this.delimiter.length);\n        }\n        this.buffer = data;\n        cb();\n    }\n    _flush(cb) {\n        this.push(this.buffer);\n        this.buffer = Buffer.alloc(0);\n        cb();\n    }\n}\nexports.DelimiterParser = DelimiterParser;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InterByteTimeoutParser = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * A transform stream that buffers data and emits it after not receiving any bytes for the specified amount of time or hitting a max buffer size.\n */\nclass InterByteTimeoutParser extends stream_1.Transform {\n    constructor({ maxBufferSize = 65536, interval, ...transformOptions }) {\n        super(transformOptions);\n        if (!interval) {\n            throw new TypeError('\"interval\" is required');\n        }\n        if (typeof interval !== 'number' || Number.isNaN(interval)) {\n            throw new TypeError('\"interval\" is not a number');\n        }\n        if (interval < 1) {\n            throw new TypeError('\"interval\" is not greater than 0');\n        }\n        if (typeof maxBufferSize !== 'number' || Number.isNaN(maxBufferSize)) {\n            throw new TypeError('\"maxBufferSize\" is not a number');\n        }\n        if (maxBufferSize < 1) {\n            throw new TypeError('\"maxBufferSize\" is not greater than 0');\n        }\n        this.maxBufferSize = maxBufferSize;\n        this.currentPacket = [];\n        this.interval = interval;\n    }\n    _transform(chunk, encoding, cb) {\n        if (this.intervalID) {\n            clearTimeout(this.intervalID);\n        }\n        for (let offset = 0; offset < chunk.length; offset++) {\n            this.currentPacket.push(chunk[offset]);\n            if (this.currentPacket.length >= this.maxBufferSize) {\n                this.emitPacket();\n            }\n        }\n        this.intervalID = setTimeout(this.emitPacket.bind(this), this.interval);\n        cb();\n    }\n    emitPacket() {\n        if (this.intervalID) {\n            clearTimeout(this.intervalID);\n        }\n        if (this.currentPacket.length > 0) {\n            this.push(Buffer.from(this.currentPacket));\n        }\n        this.currentPacket = [];\n    }\n    _flush(cb) {\n        this.emitPacket();\n        cb();\n    }\n}\nexports.InterByteTimeoutParser = InterByteTimeoutParser;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PacketLengthParser = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * A transform stream that decodes packets with a delimiter and length of payload\n * specified within the data stream.\n * @extends Transform\n * @summary Decodes packets of the general form:\n *       [delimiter][len][payload0] ... [payload0 + len]\n *\n * The length field can be up to 4 bytes and can be at any offset within the packet\n *       [delimiter][header0][header1][len0][len1[payload0] ... [payload0 + len]\n *\n * The offset and number of bytes of the length field need to be provided in options\n * if not 1 byte immediately following the delimiter.\n */\nclass PacketLengthParser extends stream_1.Transform {\n    constructor(options = {}) {\n        super(options);\n        const { delimiter = 0xaa, packetOverhead = 2, lengthBytes = 1, lengthOffset = 1, maxLen = 0xff } = options;\n        this.opts = {\n            delimiter,\n            packetOverhead,\n            lengthBytes,\n            lengthOffset,\n            maxLen,\n        };\n        this.buffer = Buffer.alloc(0);\n        this.start = false;\n    }\n    _transform(chunk, encoding, cb) {\n        for (let ndx = 0; ndx < chunk.length; ndx++) {\n            const byte = chunk[ndx];\n            if (byte === this.opts.delimiter) {\n                this.start = true;\n            }\n            if (true === this.start) {\n                this.buffer = Buffer.concat([this.buffer, Buffer.from([byte])]);\n                if (this.buffer.length >= this.opts.lengthOffset + this.opts.lengthBytes) {\n                    const len = this.buffer.readUIntLE(this.opts.lengthOffset, this.opts.lengthBytes);\n                    if (this.buffer.length == len + this.opts.packetOverhead || len > this.opts.maxLen) {\n                        this.push(this.buffer);\n                        this.buffer = Buffer.alloc(0);\n                        this.start = false;\n                    }\n                }\n            }\n        }\n        cb();\n    }\n    _flush(cb) {\n        this.push(this.buffer);\n        this.buffer = Buffer.alloc(0);\n        cb();\n    }\n}\nexports.PacketLengthParser = PacketLengthParser;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadlineParser = void 0;\nconst parser_delimiter_1 = require(\"@serialport/parser-delimiter\");\n/**\n *  A transform stream that emits data after a newline delimiter is received.\n * @summary To use the `Readline` parser, provide a delimiter (defaults to `\\n`). Data is emitted as string controllable by the `encoding` option (defaults to `utf8`).\n */\nclass ReadlineParser extends parser_delimiter_1.DelimiterParser {\n    constructor(options) {\n        const opts = {\n            delimiter: Buffer.from('\\n', 'utf8'),\n            encoding: 'utf8',\n            ...options,\n        };\n        if (typeof opts.delimiter === 'string') {\n            opts.delimiter = Buffer.from(opts.delimiter, opts.encoding);\n        }\n        super(opts);\n    }\n}\nexports.ReadlineParser = ReadlineParser;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadyParser = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * A transform stream that waits for a sequence of \"ready\" bytes before emitting a ready event and emitting data events\n *\n * To use the `Ready` parser provide a byte start sequence. After the bytes have been received a ready event is fired and data events are passed through.\n */\nclass ReadyParser extends stream_1.Transform {\n    constructor({ delimiter, ...options }) {\n        if (delimiter === undefined) {\n            throw new TypeError('\"delimiter\" is not a bufferable object');\n        }\n        if (delimiter.length === 0) {\n            throw new TypeError('\"delimiter\" has a 0 or undefined length');\n        }\n        super(options);\n        this.delimiter = Buffer.from(delimiter);\n        this.readOffset = 0;\n        this.ready = false;\n    }\n    _transform(chunk, encoding, cb) {\n        if (this.ready) {\n            this.push(chunk);\n            return cb();\n        }\n        const delimiter = this.delimiter;\n        let chunkOffset = 0;\n        while (this.readOffset < delimiter.length && chunkOffset < chunk.length) {\n            if (delimiter[this.readOffset] === chunk[chunkOffset]) {\n                this.readOffset++;\n            }\n            else {\n                this.readOffset = 0;\n            }\n            chunkOffset++;\n        }\n        if (this.readOffset === delimiter.length) {\n            this.ready = true;\n            this.emit('ready');\n            const chunkRest = chunk.slice(chunkOffset);\n            if (chunkRest.length > 0) {\n                this.push(chunkRest);\n            }\n        }\n        cb();\n    }\n}\nexports.ReadyParser = ReadyParser;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegexParser = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * A transform stream that uses a regular expression to split the incoming text upon.\n *\n * To use the `Regex` parser provide a regular expression to split the incoming text upon. Data is emitted as string controllable by the `encoding` option (defaults to `utf8`).\n */\nclass RegexParser extends stream_1.Transform {\n    constructor({ regex, ...options }) {\n        const opts = {\n            encoding: 'utf8',\n            ...options,\n        };\n        if (regex === undefined) {\n            throw new TypeError('\"options.regex\" must be a regular expression pattern or object');\n        }\n        if (!(regex instanceof RegExp)) {\n            regex = new RegExp(regex.toString());\n        }\n        super(opts);\n        this.regex = regex;\n        this.data = '';\n    }\n    _transform(chunk, encoding, cb) {\n        const data = this.data + chunk;\n        const parts = data.split(this.regex);\n        this.data = parts.pop() || '';\n        parts.forEach(part => {\n            this.push(part);\n        });\n        cb();\n    }\n    _flush(cb) {\n        this.push(this.data);\n        this.data = '';\n        cb();\n    }\n}\nexports.RegexParser = RegexParser;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlipDecoder = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * A transform stream that decodes slip encoded data.\n * @extends Transform\n *\n * Runs in O(n) time, stripping out slip encoding and emitting decoded data. Optionally custom slip escape and delimiters can be provided.\n */\nclass SlipDecoder extends stream_1.Transform {\n    constructor(options = {}) {\n        super(options);\n        const { START, ESC = 0xdb, END = 0xc0, ESC_START, ESC_END = 0xdc, ESC_ESC = 0xdd } = options;\n        this.opts = {\n            START,\n            ESC,\n            END,\n            ESC_START,\n            ESC_END,\n            ESC_ESC,\n        };\n        this.buffer = Buffer.alloc(0);\n        this.escape = false;\n        this.start = false;\n    }\n    _transform(chunk, encoding, cb) {\n        for (let ndx = 0; ndx < chunk.length; ndx++) {\n            let byte = chunk[ndx];\n            if (byte === this.opts.START) {\n                this.start = true;\n                continue;\n            }\n            else if (undefined == this.opts.START) {\n                this.start = true;\n            }\n            if (this.escape) {\n                if (byte === this.opts.ESC_START && this.opts.START) {\n                    byte = this.opts.START;\n                }\n                else if (byte === this.opts.ESC_ESC) {\n                    byte = this.opts.ESC;\n                }\n                else if (byte === this.opts.ESC_END) {\n                    byte = this.opts.END;\n                }\n                else {\n                    this.escape = false;\n                    this.push(this.buffer);\n                    this.buffer = Buffer.alloc(0);\n                }\n            }\n            else {\n                if (byte === this.opts.ESC) {\n                    this.escape = true;\n                    continue;\n                }\n                if (byte === this.opts.END) {\n                    this.push(this.buffer);\n                    this.buffer = Buffer.alloc(0);\n                    this.escape = false;\n                    this.start = false;\n                    continue;\n                }\n            }\n            this.escape = false;\n            if (this.start) {\n                this.buffer = Buffer.concat([this.buffer, Buffer.from([byte])]);\n            }\n        }\n        cb();\n    }\n    _flush(cb) {\n        this.push(this.buffer);\n        this.buffer = Buffer.alloc(0);\n        cb();\n    }\n}\nexports.SlipDecoder = SlipDecoder;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlipEncoder = void 0;\nconst stream_1 = require(\"stream\");\n/**\n * A transform stream that emits SLIP-encoded data for each incoming packet.\n *\n * Runs in O(n) time, adding a 0xC0 character at the end of each\n * received packet and escaping characters, according to RFC 1055.\n */\nclass SlipEncoder extends stream_1.Transform {\n    constructor(options = {}) {\n        super(options);\n        const { START, ESC = 0xdb, END = 0xc0, ESC_START, ESC_END = 0xdc, ESC_ESC = 0xdd, bluetoothQuirk = false } = options;\n        this.opts = {\n            START,\n            ESC,\n            END,\n            ESC_START,\n            ESC_END,\n            ESC_ESC,\n            bluetoothQuirk,\n        };\n    }\n    _transform(chunk, encoding, cb) {\n        const chunkLength = chunk.length;\n        if (this.opts.bluetoothQuirk && chunkLength === 0) {\n            // Edge case: push no data. Bluetooth-quirky SLIP parsers don't like\n            // lots of 0xC0s together.\n            return cb();\n        }\n        // Allocate memory for the worst-case scenario: all bytes are escaped,\n        // plus start and end separators.\n        const encoded = Buffer.alloc(chunkLength * 2 + 2);\n        let j = 0;\n        if (this.opts.bluetoothQuirk == true) {\n            encoded[j++] = this.opts.END;\n        }\n        if (this.opts.START !== undefined) {\n            encoded[j++] = this.opts.START;\n        }\n        for (let i = 0; i < chunkLength; i++) {\n            let byte = chunk[i];\n            if (byte === this.opts.START && this.opts.ESC_START) {\n                encoded[j++] = this.opts.ESC;\n                byte = this.opts.ESC_START;\n            }\n            else if (byte === this.opts.END) {\n                encoded[j++] = this.opts.ESC;\n                byte = this.opts.ESC_END;\n            }\n            else if (byte === this.opts.ESC) {\n                encoded[j++] = this.opts.ESC;\n                byte = this.opts.ESC_ESC;\n            }\n            encoded[j++] = byte;\n        }\n        encoded[j++] = this.opts.END;\n        cb(null, encoded.slice(0, j));\n    }\n}\nexports.SlipEncoder = SlipEncoder;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./decoder\"), exports);\n__exportStar(require(\"./encoder\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertHeaderBufferToObj = exports.HEADER_LENGTH = void 0;\nexports.HEADER_LENGTH = 6;\n/**\n * For numbers less than 255, will ensure that their string representation is at least 8 characters long.\n */\nconst toOctetStr = (num) => {\n    let str = Number(num).toString(2);\n    while (str.length < 8) {\n        str = `0${str}`;\n    }\n    return str;\n};\n/**\n * Converts a Buffer of any length to an Object representation of a Space Packet header, provided\n * the received data is in the correct format.\n * @param buf - The buffer containing the Space Packet Header Data\n */\nconst convertHeaderBufferToObj = (buf) => {\n    const headerStr = Array.from(buf.slice(0, exports.HEADER_LENGTH)).reduce((accum, curr) => `${accum}${toOctetStr(curr)}`, '');\n    const isVersion1 = headerStr.slice(0, 3) === '000';\n    const versionNumber = isVersion1 ? 1 : 'UNKNOWN_VERSION';\n    const type = Number(headerStr[3]);\n    const secondaryHeader = Number(headerStr[4]);\n    const apid = parseInt(headerStr.slice(5, 16), 2);\n    const sequenceFlags = parseInt(headerStr.slice(16, 18), 2);\n    const packetName = parseInt(headerStr.slice(18, 32), 2);\n    const dataLength = parseInt(headerStr.slice(-16), 2) + 1;\n    return {\n        versionNumber,\n        identification: {\n            apid,\n            secondaryHeader,\n            type,\n        },\n        sequenceControl: {\n            packetName,\n            sequenceFlags,\n        },\n        dataLength,\n    };\n};\nexports.convertHeaderBufferToObj = convertHeaderBufferToObj;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpacePacketParser = void 0;\nconst stream_1 = require(\"stream\");\nconst utils_1 = require(\"./utils\");\n/**\n * A Transform stream that accepts a stream of octet data and converts it into an object\n * representation of a CCSDS Space Packet. See https://public.ccsds.org/Pubs/133x0b2e1.pdf for a\n * description of the Space Packet format.\n */\nclass SpacePacketParser extends stream_1.Transform {\n    /**\n     * A Transform stream that accepts a stream of octet data and emits object representations of\n     * CCSDS Space Packets once a packet has been completely received.\n     * @param {Object} [options] Configuration options for the stream\n     * @param {Number} options.timeCodeFieldLength The length of the time code field within the data\n     * @param {Number} options.ancillaryDataFieldLength The length of the ancillary data field within the data\n     */\n    constructor(options = {}) {\n        super({ ...options, objectMode: true });\n        // Set the constants for this Space Packet Connection; these will help us parse incoming data\n        // fields:\n        this.timeCodeFieldLength = options.timeCodeFieldLength || 0;\n        this.ancillaryDataFieldLength = options.ancillaryDataFieldLength || 0;\n        this.dataSlice = this.timeCodeFieldLength + this.ancillaryDataFieldLength;\n        // These are stateful based on the current packet being received:\n        this.dataBuffer = Buffer.alloc(0);\n        this.headerBuffer = Buffer.alloc(0);\n        this.dataLength = 0;\n        this.expectingHeader = true;\n    }\n    /**\n     * Bundle the header, secondary header if present, and the data into a JavaScript object to emit.\n     * If more data has been received past the current packet, begin the process of parsing the next\n     * packet(s).\n     */\n    pushCompletedPacket() {\n        if (!this.header) {\n            throw new Error('Missing header');\n        }\n        const timeCode = Buffer.from(this.dataBuffer.slice(0, this.timeCodeFieldLength));\n        const ancillaryData = Buffer.from(this.dataBuffer.slice(this.timeCodeFieldLength, this.timeCodeFieldLength + this.ancillaryDataFieldLength));\n        const data = Buffer.from(this.dataBuffer.slice(this.dataSlice, this.dataLength));\n        const completedPacket = {\n            header: { ...this.header },\n            data: data.toString(),\n        };\n        if (timeCode.length > 0 || ancillaryData.length > 0) {\n            completedPacket.secondaryHeader = {};\n            if (timeCode.length) {\n                completedPacket.secondaryHeader.timeCode = timeCode.toString();\n            }\n            if (ancillaryData.length) {\n                completedPacket.secondaryHeader.ancillaryData = ancillaryData.toString();\n            }\n        }\n        this.push(completedPacket);\n        // If there is an overflow (i.e. we have more data than the packet we just pushed) begin parsing\n        // the next packet.\n        const nextChunk = Buffer.from(this.dataBuffer.slice(this.dataLength));\n        if (nextChunk.length >= utils_1.HEADER_LENGTH) {\n            this.extractHeader(nextChunk);\n        }\n        else {\n            this.headerBuffer = nextChunk;\n            this.dataBuffer = Buffer.alloc(0);\n            this.expectingHeader = true;\n            this.dataLength = 0;\n            this.header = undefined;\n        }\n    }\n    /**\n     * Build the Stream's headerBuffer property from the received Buffer chunk; extract data from it\n     * if it's complete. If there's more to the chunk than just the header, initiate handling the\n     * packet data.\n     * @param chunk -  Build the Stream's headerBuffer property from\n     */\n    extractHeader(chunk) {\n        const headerAsBuffer = Buffer.concat([this.headerBuffer, chunk]);\n        const startOfDataBuffer = headerAsBuffer.slice(utils_1.HEADER_LENGTH);\n        if (headerAsBuffer.length >= utils_1.HEADER_LENGTH) {\n            this.header = (0, utils_1.convertHeaderBufferToObj)(headerAsBuffer);\n            this.dataLength = this.header.dataLength;\n            this.headerBuffer = Buffer.alloc(0);\n            this.expectingHeader = false;\n        }\n        else {\n            this.headerBuffer = headerAsBuffer;\n        }\n        if (startOfDataBuffer.length > 0) {\n            this.dataBuffer = Buffer.from(startOfDataBuffer);\n            if (this.dataBuffer.length >= this.dataLength) {\n                this.pushCompletedPacket();\n            }\n        }\n    }\n    _transform(chunk, encoding, cb) {\n        if (this.expectingHeader) {\n            this.extractHeader(chunk);\n        }\n        else {\n            this.dataBuffer = Buffer.concat([this.dataBuffer, chunk]);\n            if (this.dataBuffer.length >= this.dataLength) {\n                this.pushCompletedPacket();\n            }\n        }\n        cb();\n    }\n    _flush(cb) {\n        const remaining = Buffer.concat([this.headerBuffer, this.dataBuffer]);\n        const remainingArray = Array.from(remaining);\n        this.push(remainingArray);\n        cb();\n    }\n}\nexports.SpacePacketParser = SpacePacketParser;\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SerialPortStream = exports.DisconnectedError = void 0;\nconst stream_1 = require(\"stream\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)('serialport/stream');\nclass DisconnectedError extends Error {\n    constructor(message) {\n        super(message);\n        this.disconnected = true;\n    }\n}\nexports.DisconnectedError = DisconnectedError;\nconst defaultSetFlags = {\n    brk: false,\n    cts: false,\n    dtr: true,\n    rts: true,\n};\nfunction allocNewReadPool(poolSize) {\n    const pool = Buffer.allocUnsafe(poolSize);\n    pool.used = 0;\n    return pool;\n}\nclass SerialPortStream extends stream_1.Duplex {\n    /**\n     * Create a new serial port object for the `path`. In the case of invalid arguments or invalid options, when constructing a new SerialPort it will throw an error. The port will open automatically by default, which is the equivalent of calling `port.open(openCallback)` in the next tick. You can disable this by setting the option `autoOpen` to `false`.\n     * @emits open\n     * @emits data\n     * @emits close\n     * @emits error\n     */\n    constructor(options, openCallback) {\n        const settings = {\n            autoOpen: true,\n            endOnClose: false,\n            highWaterMark: 64 * 1024,\n            ...options,\n        };\n        super({\n            highWaterMark: settings.highWaterMark,\n        });\n        if (!settings.binding) {\n            throw new TypeError('\"Bindings\" is invalid pass it as `options.binding`');\n        }\n        if (!settings.path) {\n            throw new TypeError(`\"path\" is not defined: ${settings.path}`);\n        }\n        if (typeof settings.baudRate !== 'number') {\n            throw new TypeError(`\"baudRate\" must be a number: ${settings.baudRate}`);\n        }\n        this.settings = settings;\n        this.opening = false;\n        this.closing = false;\n        this._pool = allocNewReadPool(this.settings.highWaterMark);\n        this._kMinPoolSpace = 128;\n        if (this.settings.autoOpen) {\n            this.open(openCallback);\n        }\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get baudRate() {\n        return this.settings.baudRate;\n    }\n    get isOpen() {\n        var _a, _b;\n        return ((_b = (_a = this.port) === null || _a === void 0 ? void 0 : _a.isOpen) !== null && _b !== void 0 ? _b : false) && !this.closing;\n    }\n    _error(error, callback) {\n        if (callback) {\n            callback.call(this, error);\n        }\n        else {\n            this.emit('error', error);\n        }\n    }\n    _asyncError(error, callback) {\n        process.nextTick(() => this._error(error, callback));\n    }\n    /**\n     * Opens a connection to the given serial port.\n     * @param {ErrorCallback=} openCallback - Called after a connection is opened. If this is not provided and an error occurs, it will be emitted on the port's `error` event.\n     * @emits open\n     */\n    open(openCallback) {\n        if (this.isOpen) {\n            return this._asyncError(new Error('Port is already open'), openCallback);\n        }\n        if (this.opening) {\n            return this._asyncError(new Error('Port is opening'), openCallback);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { highWaterMark, binding, autoOpen, endOnClose, ...openOptions } = this.settings;\n        this.opening = true;\n        debug('opening', `path: ${this.path}`);\n        this.settings.binding.open(openOptions).then(port => {\n            debug('opened', `path: ${this.path}`);\n            this.port = port;\n            this.opening = false;\n            this.emit('open');\n            if (openCallback) {\n                openCallback.call(this, null);\n            }\n        }, err => {\n            this.opening = false;\n            debug('Binding #open had an error', err);\n            this._error(err, openCallback);\n        });\n    }\n    /**\n     * Changes the baud rate for an open port. Emits an error or calls the callback if the baud rate isn't supported.\n     * @param {object=} options Only supports `baudRate`.\n     * @param {number=} [options.baudRate] The baud rate of the port to be opened. This should match one of the commonly available baud rates, such as 110, 300, 1200, 2400, 4800, 9600, 14400, 19200, 38400, 57600, or 115200. Custom rates are supported best effort per platform. The device connected to the serial port is not guaranteed to support the requested baud rate, even if the port itself supports that baud rate.\n     * @param {ErrorCallback=} [callback] Called once the port's baud rate changes. If `.update` is called without a callback, and there is an error, an error event is emitted.\n     * @returns {undefined}\n     */\n    update(options, callback) {\n        if (!this.isOpen || !this.port) {\n            debug('update attempted, but port is not open');\n            return this._asyncError(new Error('Port is not open'), callback);\n        }\n        debug('update', `baudRate: ${options.baudRate}`);\n        this.port.update(options).then(() => {\n            debug('binding.update', 'finished');\n            this.settings.baudRate = options.baudRate;\n            if (callback) {\n                callback.call(this, null);\n            }\n        }, err => {\n            debug('binding.update', 'error', err);\n            return this._error(err, callback);\n        });\n    }\n    write(data, encoding, callback) {\n        if (Array.isArray(data)) {\n            data = Buffer.from(data);\n        }\n        if (typeof encoding === 'function') {\n            return super.write(data, encoding);\n        }\n        return super.write(data, encoding, callback);\n    }\n    _write(data, encoding, callback) {\n        if (!this.isOpen || !this.port) {\n            this.once('open', () => {\n                this._write(data, encoding, callback);\n            });\n            return;\n        }\n        debug('_write', `${data.length} bytes of data`);\n        this.port.write(data).then(() => {\n            debug('binding.write', 'write finished');\n            callback(null);\n        }, err => {\n            debug('binding.write', 'error', err);\n            if (!err.canceled) {\n                this._disconnected(err);\n            }\n            callback(err);\n        });\n    }\n    _writev(data, callback) {\n        debug('_writev', `${data.length} chunks of data`);\n        const dataV = data.map(write => write.chunk);\n        this._write(Buffer.concat(dataV), undefined, callback);\n    }\n    _read(bytesToRead) {\n        if (!this.isOpen || !this.port) {\n            debug('_read', 'queueing _read for after open');\n            this.once('open', () => {\n                this._read(bytesToRead);\n            });\n            return;\n        }\n        if (!this._pool || this._pool.length - this._pool.used < this._kMinPoolSpace) {\n            debug('_read', 'discarding the read buffer pool because it is below kMinPoolSpace');\n            this._pool = allocNewReadPool(this.settings.highWaterMark);\n        }\n        // Grab another reference to the pool in the case that while we're\n        // in the thread pool another read() finishes up the pool, and\n        // allocates a new one.\n        const pool = this._pool;\n        // Read the smaller of rest of the pool or however many bytes we want\n        const toRead = Math.min(pool.length - pool.used, bytesToRead);\n        const start = pool.used;\n        // the actual read.\n        debug('_read', `reading`, { start, toRead });\n        this.port.read(pool, start, toRead).then(({ bytesRead }) => {\n            debug('binding.read', `finished`, { bytesRead });\n            // zero bytes means read means we've hit EOF? Maybe this should be an error\n            if (bytesRead === 0) {\n                debug('binding.read', 'Zero bytes read closing readable stream');\n                this.push(null);\n                return;\n            }\n            pool.used += bytesRead;\n            this.push(pool.slice(start, start + bytesRead));\n        }, err => {\n            debug('binding.read', `error`, err);\n            if (!err.canceled) {\n                this._disconnected(err);\n            }\n            this._read(bytesToRead); // prime to read more once we're reconnected\n        });\n    }\n    _disconnected(err) {\n        if (!this.isOpen) {\n            debug('disconnected aborted because already closed', err);\n            return;\n        }\n        debug('disconnected', err);\n        this.close(undefined, new DisconnectedError(err.message));\n    }\n    /**\n     * Closes an open connection.\n     *\n     * If there are in progress writes when the port is closed the writes will error.\n     * @param {ErrorCallback} callback Called once a connection is closed.\n     * @param {Error} disconnectError used internally to propagate a disconnect error\n     */\n    close(callback, disconnectError = null) {\n        if (!this.isOpen || !this.port) {\n            debug('close attempted, but port is not open');\n            return this._asyncError(new Error('Port is not open'), callback);\n        }\n        this.closing = true;\n        debug('#close');\n        this.port.close().then(() => {\n            this.closing = false;\n            debug('binding.close', 'finished');\n            this.emit('close', disconnectError);\n            if (this.settings.endOnClose) {\n                this.emit('end');\n            }\n            if (callback) {\n                callback.call(this, disconnectError);\n            }\n        }, err => {\n            this.closing = false;\n            debug('binding.close', 'had an error', err);\n            return this._error(err, callback);\n        });\n    }\n    /**\n     * Set control flags on an open port. Uses [`SetCommMask`](https://msdn.microsoft.com/en-us/library/windows/desktop/aa363257(v=vs.85).aspx) for Windows and [`ioctl`](http://linux.die.net/man/4/tty_ioctl) for OS X and Linux.\n     *\n     * All options are operating system default when the port is opened. Every flag is set on each call to the provided or default values. If options isn't provided default options is used.\n     */\n    set(options, callback) {\n        if (!this.isOpen || !this.port) {\n            debug('set attempted, but port is not open');\n            return this._asyncError(new Error('Port is not open'), callback);\n        }\n        const settings = { ...defaultSetFlags, ...options };\n        debug('#set', settings);\n        this.port.set(settings).then(() => {\n            debug('binding.set', 'finished');\n            if (callback) {\n                callback.call(this, null);\n            }\n        }, err => {\n            debug('binding.set', 'had an error', err);\n            return this._error(err, callback);\n        });\n    }\n    /**\n     * Returns the control flags (CTS, DSR, DCD) on the open port.\n     * Uses [`GetCommModemStatus`](https://msdn.microsoft.com/en-us/library/windows/desktop/aa363258(v=vs.85).aspx) for Windows and [`ioctl`](http://linux.die.net/man/4/tty_ioctl) for mac and linux.\n     */\n    get(callback) {\n        if (!this.isOpen || !this.port) {\n            debug('get attempted, but port is not open');\n            return this._asyncError(new Error('Port is not open'), callback);\n        }\n        debug('#get');\n        this.port.get().then(status => {\n            debug('binding.get', 'finished');\n            callback.call(this, null, status);\n        }, err => {\n            debug('binding.get', 'had an error', err);\n            return this._error(err, callback);\n        });\n    }\n    /**\n     * Flush discards data received but not read, and written but not transmitted by the operating system. For more technical details, see [`tcflush(fd, TCIOFLUSH)`](http://linux.die.net/man/3/tcflush) for Mac/Linux and [`FlushFileBuffers`](http://msdn.microsoft.com/en-us/library/windows/desktop/aa364439) for Windows.\n     */\n    flush(callback) {\n        if (!this.isOpen || !this.port) {\n            debug('flush attempted, but port is not open');\n            return this._asyncError(new Error('Port is not open'), callback);\n        }\n        debug('#flush');\n        this.port.flush().then(() => {\n            debug('binding.flush', 'finished');\n            if (callback) {\n                callback.call(this, null);\n            }\n        }, err => {\n            debug('binding.flush', 'had an error', err);\n            return this._error(err, callback);\n        });\n    }\n    /**\n     * Waits until all output data is transmitted to the serial port. After any pending write has completed it calls [`tcdrain()`](http://linux.die.net/man/3/tcdrain) or [FlushFileBuffers()](https://msdn.microsoft.com/en-us/library/windows/desktop/aa364439(v=vs.85).aspx) to ensure it has been written to the device.\n    * @example\n    Write the `data` and wait until it has finished transmitting to the target serial port before calling the callback. This will queue until the port is open and writes are finished.\n  \n    ```js\n    function writeAndDrain (data, callback) {\n      port.write(data);\n      port.drain(callback);\n    }\n    ```\n    */\n    drain(callback) {\n        debug('drain');\n        if (!this.isOpen || !this.port) {\n            debug('drain queuing on port open');\n            this.once('open', () => {\n                this.drain(callback);\n            });\n            return;\n        }\n        this.port.drain().then(() => {\n            debug('binding.drain', 'finished');\n            if (callback) {\n                callback.call(this, null);\n            }\n        }, err => {\n            debug('binding.drain', 'had an error', err);\n            return this._error(err, callback);\n        });\n    }\n}\nexports.SerialPortStream = SerialPortStream;\n/**\n * The `error` event's callback is called with an error object whenever there is an error.\n * @event error\n */\n/**\n * The `open` event's callback is called with no arguments when the port is opened and ready for writing. This happens if you have the constructor open immediately (which opens in the next tick) or if you open the port manually with `open()`. See [Useage/Opening a Port](#opening-a-port) for more information.\n * @event open\n */\n/**\n * Request a number of bytes from the SerialPort. The `read()` method pulls some data out of the internal buffer and returns it. If no data is available to be read, null is returned. By default, the data is returned as a `Buffer` object unless an encoding has been specified using the `.setEncoding()` method.\n * @method SerialPort.prototype.read\n * @param {number=} size Specify how many bytes of data to return, if available\n * @returns {(string|Buffer|null)} The data from internal buffers\n */\n/**\n * Listening for the `data` event puts the port in flowing mode. Data is emitted as soon as it's received. Data is a `Buffer` object with a varying amount of data in it. The `readLine` parser converts the data into string lines. See the [parsers](https://serialport.io/docs/api-parsers-overview) section for more information on parsers, and the [Node.js stream documentation](https://nodejs.org/api/stream.html#stream_event_data) for more information on the data event.\n * @event data\n */\n/**\n * The `close` event's callback is called with no arguments when the port is closed. In the case of a disconnect it will be called with a Disconnect Error object (`err.disconnected == true`). In the event of a close error (unlikely), an error event is triggered.\n * @event close\n */\n/**\n * The `pause()` method causes a stream in flowing mode to stop emitting 'data' events, switching out of flowing mode. Any data that becomes available remains in the internal buffer.\n * @method SerialPort.prototype.pause\n * @see resume\n * @returns `this`\n */\n/**\n * The `resume()` method causes an explicitly paused, `Readable` stream to resume emitting 'data' events, switching the stream into flowing mode.\n * @method SerialPort.prototype.resume\n * @see pause\n * @returns `this`\n */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debugFactory = require('debug');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debugFactory__default = /*#__PURE__*/_interopDefaultLegacy(debugFactory);\n\nconst debug = debugFactory__default[\"default\"]('serialport/binding-mock');\nlet ports = {};\nlet serialNumber = 0;\nfunction resolveNextTick() {\n    return new Promise(resolve => process.nextTick(() => resolve()));\n}\nclass CanceledError extends Error {\n    constructor(message) {\n        super(message);\n        this.canceled = true;\n    }\n}\nconst MockBinding = {\n    reset() {\n        ports = {};\n        serialNumber = 0;\n    },\n    // Create a mock port\n    createPort(path, options = {}) {\n        serialNumber++;\n        const optWithDefaults = Object.assign({ echo: false, record: false, manufacturer: 'The J5 Robotics Company', vendorId: undefined, productId: undefined, maxReadSize: 1024 }, options);\n        ports[path] = {\n            data: Buffer.alloc(0),\n            echo: optWithDefaults.echo,\n            record: optWithDefaults.record,\n            readyData: optWithDefaults.readyData,\n            maxReadSize: optWithDefaults.maxReadSize,\n            info: {\n                path,\n                manufacturer: optWithDefaults.manufacturer,\n                serialNumber: `${serialNumber}`,\n                pnpId: undefined,\n                locationId: undefined,\n                vendorId: optWithDefaults.vendorId,\n                productId: optWithDefaults.productId,\n            },\n        };\n        debug(serialNumber, 'created port', JSON.stringify({ path, opt: options }));\n    },\n    async list() {\n        debug(null, 'list');\n        return Object.values(ports).map(port => port.info);\n    },\n    async open(options) {\n        var _a;\n        if (!options || typeof options !== 'object' || Array.isArray(options)) {\n            throw new TypeError('\"options\" is not an object');\n        }\n        if (!options.path) {\n            throw new TypeError('\"path\" is not a valid port');\n        }\n        if (!options.baudRate) {\n            throw new TypeError('\"baudRate\" is not a valid baudRate');\n        }\n        const openOptions = Object.assign({ dataBits: 8, lock: true, stopBits: 1, parity: 'none', rtscts: false, xon: false, xoff: false, xany: false, hupcl: true }, options);\n        const { path } = openOptions;\n        debug(null, `open: opening path ${path}`);\n        const port = ports[path];\n        await resolveNextTick();\n        if (!port) {\n            throw new Error(`Port does not exist - please call MockBinding.createPort('${path}') first`);\n        }\n        const serialNumber = port.info.serialNumber;\n        if ((_a = port.openOpt) === null || _a === void 0 ? void 0 : _a.lock) {\n            debug(serialNumber, 'open: Port is locked cannot open');\n            throw new Error('Port is locked cannot open');\n        }\n        debug(serialNumber, `open: opened path ${path}`);\n        port.openOpt = Object.assign({}, openOptions);\n        return new MockPortBinding(port, openOptions);\n    },\n};\n/**\n * Mock bindings for pretend serialport access\n */\nclass MockPortBinding {\n    constructor(port, openOptions) {\n        this.port = port;\n        this.openOptions = openOptions;\n        this.pendingRead = null;\n        this.isOpen = true;\n        this.lastWrite = null;\n        this.recording = Buffer.alloc(0);\n        this.writeOperation = null; // in flight promise or null\n        this.serialNumber = port.info.serialNumber;\n        if (port.readyData) {\n            const data = port.readyData;\n            process.nextTick(() => {\n                if (this.isOpen) {\n                    debug(this.serialNumber, 'emitting ready data');\n                    this.emitData(data);\n                }\n            });\n        }\n    }\n    // Emit data on a mock port\n    emitData(data) {\n        if (!this.isOpen || !this.port) {\n            throw new Error('Port must be open to pretend to receive data');\n        }\n        const bufferData = Buffer.isBuffer(data) ? data : Buffer.from(data);\n        debug(this.serialNumber, 'emitting data - pending read:', Boolean(this.pendingRead));\n        this.port.data = Buffer.concat([this.port.data, bufferData]);\n        if (this.pendingRead) {\n            process.nextTick(this.pendingRead);\n            this.pendingRead = null;\n        }\n    }\n    async close() {\n        debug(this.serialNumber, 'close');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        const port = this.port;\n        if (!port) {\n            throw new Error('already closed');\n        }\n        port.openOpt = undefined;\n        // reset data on close\n        port.data = Buffer.alloc(0);\n        debug(this.serialNumber, 'port is closed');\n        this.serialNumber = undefined;\n        this.isOpen = false;\n        if (this.pendingRead) {\n            this.pendingRead(new CanceledError('port is closed'));\n        }\n    }\n    async read(buffer, offset, length) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new TypeError('\"buffer\" is not a Buffer');\n        }\n        if (typeof offset !== 'number' || isNaN(offset)) {\n            throw new TypeError(`\"offset\" is not an integer got \"${isNaN(offset) ? 'NaN' : typeof offset}\"`);\n        }\n        if (typeof length !== 'number' || isNaN(length)) {\n            throw new TypeError(`\"length\" is not an integer got \"${isNaN(length) ? 'NaN' : typeof length}\"`);\n        }\n        if (buffer.length < offset + length) {\n            throw new Error('buffer is too small');\n        }\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        debug(this.serialNumber, 'read', length, 'bytes');\n        await resolveNextTick();\n        if (!this.isOpen || !this.port) {\n            throw new CanceledError('Read canceled');\n        }\n        if (this.port.data.length <= 0) {\n            return new Promise((resolve, reject) => {\n                this.pendingRead = err => {\n                    if (err) {\n                        return reject(err);\n                    }\n                    this.read(buffer, offset, length).then(resolve, reject);\n                };\n            });\n        }\n        const lengthToRead = this.port.maxReadSize > length ? length : this.port.maxReadSize;\n        const data = this.port.data.slice(0, lengthToRead);\n        const bytesRead = data.copy(buffer, offset);\n        this.port.data = this.port.data.slice(lengthToRead);\n        debug(this.serialNumber, 'read', bytesRead, 'bytes');\n        return { bytesRead, buffer };\n    }\n    async write(buffer) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new TypeError('\"buffer\" is not a Buffer');\n        }\n        if (!this.isOpen || !this.port) {\n            debug('write', 'error port is not open');\n            throw new Error('Port is not open');\n        }\n        debug(this.serialNumber, 'write', buffer.length, 'bytes');\n        if (this.writeOperation) {\n            throw new Error('Overlapping writes are not supported and should be queued by the serialport object');\n        }\n        this.writeOperation = (async () => {\n            await resolveNextTick();\n            if (!this.isOpen || !this.port) {\n                throw new Error('Write canceled');\n            }\n            const data = (this.lastWrite = Buffer.from(buffer)); // copy\n            if (this.port.record) {\n                this.recording = Buffer.concat([this.recording, data]);\n            }\n            if (this.port.echo) {\n                process.nextTick(() => {\n                    if (this.isOpen) {\n                        this.emitData(data);\n                    }\n                });\n            }\n            this.writeOperation = null;\n            debug(this.serialNumber, 'writing finished');\n        })();\n        return this.writeOperation;\n    }\n    async update(options) {\n        if (typeof options !== 'object') {\n            throw TypeError('\"options\" is not an object');\n        }\n        if (typeof options.baudRate !== 'number') {\n            throw new TypeError('\"options.baudRate\" is not a number');\n        }\n        debug(this.serialNumber, 'update');\n        if (!this.isOpen || !this.port) {\n            throw new Error('Port is not open');\n        }\n        await resolveNextTick();\n        if (this.port.openOpt) {\n            this.port.openOpt.baudRate = options.baudRate;\n        }\n    }\n    async set(options) {\n        if (typeof options !== 'object') {\n            throw new TypeError('\"options\" is not an object');\n        }\n        debug(this.serialNumber, 'set');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await resolveNextTick();\n    }\n    async get() {\n        debug(this.serialNumber, 'get');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await resolveNextTick();\n        return {\n            cts: true,\n            dsr: false,\n            dcd: false,\n        };\n    }\n    async getBaudRate() {\n        var _a;\n        debug(this.serialNumber, 'getBaudRate');\n        if (!this.isOpen || !this.port) {\n            throw new Error('Port is not open');\n        }\n        await resolveNextTick();\n        if (!((_a = this.port.openOpt) === null || _a === void 0 ? void 0 : _a.baudRate)) {\n            throw new Error('Internal Error');\n        }\n        return {\n            baudRate: this.port.openOpt.baudRate,\n        };\n    }\n    async flush() {\n        debug(this.serialNumber, 'flush');\n        if (!this.isOpen || !this.port) {\n            throw new Error('Port is not open');\n        }\n        await resolveNextTick();\n        this.port.data = Buffer.alloc(0);\n    }\n    async drain() {\n        debug(this.serialNumber, 'drain');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await this.writeOperation;\n        await resolveNextTick();\n    }\n}\n\nexports.CanceledError = CanceledError;\nexports.MockBinding = MockBinding;\nexports.MockPortBinding = MockPortBinding;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SerialPortMock = void 0;\nconst stream_1 = require(\"@serialport/stream\");\nconst binding_mock_1 = require(\"@serialport/binding-mock\");\nclass SerialPortMock extends stream_1.SerialPortStream {\n    constructor(options, openCallback) {\n        const opts = {\n            binding: binding_mock_1.MockBinding,\n            ...options,\n        };\n        super(opts, openCallback);\n    }\n}\nexports.SerialPortMock = SerialPortMock;\nSerialPortMock.list = binding_mock_1.MockBinding.list;\nSerialPortMock.binding = binding_mock_1.MockBinding;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')\n\nvar arch = process.env.npm_config_arch || os.arch()\nvar platform = process.env.npm_config_platform || os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.resolve(dir))\n}\n\nload.resolve = load.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\n    if (!tuple) return\n\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTuple (name) {\n  // Example: darwin-x64+arm64\n  var arr = name.split('-')\n  if (arr.length !== 2) return\n\n  var platform = arr[0]\n  var architectures = arr[1].split('+')\n\n  if (!platform) return\n  if (!architectures.length) return\n  if (!architectures.every(Boolean)) return\n\n  return { name, platform, architectures }\n}\n\nfunction matchTuple (platform, arch) {\n  return function (tuple) {\n    if (tuple == null) return false\n    if (tuple.platform !== platform) return false\n    return tuple.architectures.includes(arch)\n  }\n}\n\nfunction compareTuples (a, b) {\n  // Prefer single-arch prebuilds over multi-arch\n  return a.architectures.length - b.architectures.length\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isNwjs () {\n  return !!(process.versions && process.versions.nw)\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\nload.parseTuple = parseTuple\nload.matchTuple = matchTuple\nload.compareTuples = compareTuples\n", "if (typeof process.addon === 'function') { // if the platform supports native resolving prefer that\n  module.exports = process.addon.bind(process)\n} else { // else use the runtime version here\n  module.exports = require('./node-gyp-build.js')\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asyncWrite = exports.asyncRead = exports.asyncUpdate = exports.asyncSet = exports.asyncOpen = exports.asyncList = exports.asyncGetBaudRate = exports.asyncGet = exports.asyncFlush = exports.asyncDrain = exports.asyncClose = void 0;\nconst node_gyp_build_1 = __importDefault(require(\"node-gyp-build\"));\nconst util_1 = require(\"util\");\nconst path_1 = require(\"path\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst binding = (0, node_gyp_build_1.default)((0, path_1.join)(__dirname, '../'));\nexports.asyncClose = binding.close ? (0, util_1.promisify)(binding.close) : async () => { throw new Error('\"binding.close\" Method not implemented'); };\nexports.asyncDrain = binding.drain ? (0, util_1.promisify)(binding.drain) : async () => { throw new Error('\"binding.drain\" Method not implemented'); };\nexports.asyncFlush = binding.flush ? (0, util_1.promisify)(binding.flush) : async () => { throw new Error('\"binding.flush\" Method not implemented'); };\nexports.asyncGet = binding.get ? (0, util_1.promisify)(binding.get) : async () => { throw new Error('\"binding.get\" Method not implemented'); };\nexports.asyncGetBaudRate = binding.getBaudRate ? (0, util_1.promisify)(binding.getBaudRate) : async () => { throw new Error('\"binding.getBaudRate\" Method not implemented'); };\nexports.asyncList = binding.list ? (0, util_1.promisify)(binding.list) : async () => { throw new Error('\"binding.list\" Method not implemented'); };\nexports.asyncOpen = binding.open ? (0, util_1.promisify)(binding.open) : async () => { throw new Error('\"binding.open\" Method not implemented'); };\nexports.asyncSet = binding.set ? (0, util_1.promisify)(binding.set) : async () => { throw new Error('\"binding.set\" Method not implemented'); };\nexports.asyncUpdate = binding.update ? (0, util_1.promisify)(binding.update) : async () => { throw new Error('\"binding.update\" Method not implemented'); };\nexports.asyncRead = binding.read ? (0, util_1.promisify)(binding.read) : async () => { throw new Error('\"binding.read\" Method not implemented'); };\nexports.asyncWrite = binding.read ? (0, util_1.promisify)(binding.write) : async () => { throw new Error('\"binding.write\" Method not implemented'); };\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BindingsError = void 0;\nclass BindingsError extends Error {\n    constructor(message, { canceled = false } = {}) {\n        super(message);\n        this.canceled = canceled;\n    }\n}\nexports.BindingsError = BindingsError;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Poller = exports.EVENTS = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst events_1 = require(\"events\");\nconst path_1 = require(\"path\");\nconst node_gyp_build_1 = __importDefault(require(\"node-gyp-build\"));\nconst errors_1 = require(\"./errors\");\nconst { Poller: PollerBindings } = (0, node_gyp_build_1.default)((0, path_1.join)(__dirname, '../'));\nconst logger = (0, debug_1.default)('serialport/bindings-cpp/poller');\nexports.EVENTS = {\n    UV_READABLE: 0b0001,\n    UV_WRITABLE: 0b0010,\n    UV_DISCONNECT: 0b0100,\n};\nfunction handleEvent(error, eventFlag) {\n    if (error) {\n        logger('error', error);\n        this.emit('readable', error);\n        this.emit('writable', error);\n        this.emit('disconnect', error);\n        return;\n    }\n    if (eventFlag & exports.EVENTS.UV_READABLE) {\n        logger('received \"readable\"');\n        this.emit('readable', null);\n    }\n    if (eventFlag & exports.EVENTS.UV_WRITABLE) {\n        logger('received \"writable\"');\n        this.emit('writable', null);\n    }\n    if (eventFlag & exports.EVENTS.UV_DISCONNECT) {\n        logger('received \"disconnect\"');\n        this.emit('disconnect', null);\n    }\n}\n/**\n * Polls unix systems for readable or writable states of a file or serialport\n */\nclass Poller extends events_1.EventEmitter {\n    constructor(fd, FDPoller = PollerBindings) {\n        logger('Creating poller');\n        super();\n        this.poller = new FDPoller(fd, handleEvent.bind(this));\n    }\n    /**\n     * Wait for the next event to occur\n     * @param {string} event ('readable'|'writable'|'disconnect')\n     * @returns {Poller} returns itself\n     */\n    once(event, callback) {\n        switch (event) {\n            case 'readable':\n                this.poll(exports.EVENTS.UV_READABLE);\n                break;\n            case 'writable':\n                this.poll(exports.EVENTS.UV_WRITABLE);\n                break;\n            case 'disconnect':\n                this.poll(exports.EVENTS.UV_DISCONNECT);\n                break;\n        }\n        return super.once(event, callback);\n    }\n    /**\n     * Ask the bindings to listen for an event, it is recommend to use `.once()` for easy use\n     * @param {EVENTS} eventFlag polls for an event or group of events based upon a flag.\n     */\n    poll(eventFlag = 0) {\n        if (eventFlag & exports.EVENTS.UV_READABLE) {\n            logger('Polling for \"readable\"');\n        }\n        if (eventFlag & exports.EVENTS.UV_WRITABLE) {\n            logger('Polling for \"writable\"');\n        }\n        if (eventFlag & exports.EVENTS.UV_DISCONNECT) {\n            logger('Polling for \"disconnect\"');\n        }\n        this.poller.poll(eventFlag);\n    }\n    /**\n     * Stop listening for events and cancel all outstanding listening with an error\n     */\n    stop() {\n        logger('Stopping poller');\n        this.poller.stop();\n        this.emitCanceled();\n    }\n    destroy() {\n        logger('Destroying poller');\n        this.poller.destroy();\n        this.emitCanceled();\n    }\n    emitCanceled() {\n        const err = new errors_1.BindingsError('Canceled', { canceled: true });\n        this.emit('readable', err);\n        this.emit('writable', err);\n        this.emit('disconnect', err);\n    }\n}\nexports.Poller = Poller;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unixRead = void 0;\nconst util_1 = require(\"util\");\nconst fs_1 = require(\"fs\");\nconst errors_1 = require(\"./errors\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst logger = (0, debug_1.default)('serialport/bindings-cpp/unixRead');\nconst readAsync = (0, util_1.promisify)(fs_1.read);\nconst readable = (binding) => {\n    return new Promise((resolve, reject) => {\n        if (!binding.poller) {\n            throw new Error('No poller on bindings');\n        }\n        binding.poller.once('readable', err => (err ? reject(err) : resolve()));\n    });\n};\nconst unixRead = async ({ binding, buffer, offset, length, fsReadAsync = readAsync, }) => {\n    logger('Starting read');\n    if (!binding.isOpen || !binding.fd) {\n        throw new errors_1.BindingsError('Port is not open', { canceled: true });\n    }\n    try {\n        const { bytesRead } = await fsReadAsync(binding.fd, buffer, offset, length, null);\n        if (bytesRead === 0) {\n            return (0, exports.unixRead)({ binding, buffer, offset, length, fsReadAsync });\n        }\n        logger('Finished read', bytesRead, 'bytes');\n        return { bytesRead, buffer };\n    }\n    catch (err) {\n        logger('read error', err);\n        if (err.code === 'EAGAIN' || err.code === 'EWOULDBLOCK' || err.code === 'EINTR') {\n            if (!binding.isOpen) {\n                throw new errors_1.BindingsError('Port is not open', { canceled: true });\n            }\n            logger('waiting for readable because of code:', err.code);\n            await readable(binding);\n            return (0, exports.unixRead)({ binding, buffer, offset, length, fsReadAsync });\n        }\n        const disconnectError = err.code === 'EBADF' || // Bad file number means we got closed\n            err.code === 'ENXIO' || // No such device or address probably usb disconnect\n            err.code === 'UNKNOWN' ||\n            err.errno === -1; // generic error\n        if (disconnectError) {\n            err.disconnect = true;\n            logger('disconnecting', err);\n        }\n        throw err;\n    }\n};\nexports.unixRead = unixRead;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unixWrite = void 0;\nconst fs_1 = require(\"fs\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst util_1 = require(\"util\");\nconst logger = (0, debug_1.default)('serialport/bindings-cpp/unixWrite');\nconst writeAsync = (0, util_1.promisify)(fs_1.write);\nconst writable = (binding) => {\n    return new Promise((resolve, reject) => {\n        binding.poller.once('writable', err => (err ? reject(err) : resolve()));\n    });\n};\nconst unixWrite = async ({ binding, buffer, offset = 0, fsWriteAsync = writeAsync }) => {\n    const bytesToWrite = buffer.length - offset;\n    logger('Starting write', buffer.length, 'bytes offset', offset, 'bytesToWrite', bytesToWrite);\n    if (!binding.isOpen || !binding.fd) {\n        throw new Error('Port is not open');\n    }\n    try {\n        const { bytesWritten } = await fsWriteAsync(binding.fd, buffer, offset, bytesToWrite);\n        logger('write returned: wrote', bytesWritten, 'bytes');\n        if (bytesWritten + offset < buffer.length) {\n            if (!binding.isOpen) {\n                throw new Error('Port is not open');\n            }\n            return (0, exports.unixWrite)({ binding, buffer, offset: bytesWritten + offset, fsWriteAsync });\n        }\n        logger('Finished writing', bytesWritten + offset, 'bytes');\n    }\n    catch (err) {\n        logger('write errored', err);\n        if (err.code === 'EAGAIN' || err.code === 'EWOULDBLOCK' || err.code === 'EINTR') {\n            if (!binding.isOpen) {\n                throw new Error('Port is not open');\n            }\n            logger('waiting for writable because of code:', err.code);\n            await writable(binding);\n            return (0, exports.unixWrite)({ binding, buffer, offset, fsWriteAsync });\n        }\n        const disconnectError = err.code === 'EBADF' || // Bad file number means we got closed\n            err.code === 'ENXIO' || // No such device or address probably usb disconnect\n            err.code === 'UNKNOWN' ||\n            err.errno === -1; // generic error\n        if (disconnectError) {\n            err.disconnect = true;\n            logger('disconnecting', err);\n        }\n        logger('error', err);\n        throw err;\n    }\n};\nexports.unixWrite = unixWrite;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DarwinPortBinding = exports.DarwinBinding = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst load_bindings_1 = require(\"./load-bindings\");\nconst poller_1 = require(\"./poller\");\nconst unix_read_1 = require(\"./unix-read\");\nconst unix_write_1 = require(\"./unix-write\");\nconst debug = (0, debug_1.default)('serialport/bindings-cpp');\nexports.DarwinBinding = {\n    list() {\n        debug('list');\n        return (0, load_bindings_1.asyncList)();\n    },\n    async open(options) {\n        if (!options || typeof options !== 'object' || Array.isArray(options)) {\n            throw new TypeError('\"options\" is not an object');\n        }\n        if (!options.path) {\n            throw new TypeError('\"path\" is not a valid port');\n        }\n        if (!options.baudRate) {\n            throw new TypeError('\"baudRate\" is not a valid baudRate');\n        }\n        debug('open');\n        const openOptions = Object.assign({ vmin: 1, vtime: 0, dataBits: 8, lock: true, stopBits: 1, parity: 'none', rtscts: false, xon: false, xoff: false, xany: false, hupcl: true }, options);\n        const fd = await (0, load_bindings_1.asyncOpen)(openOptions.path, openOptions);\n        return new DarwinPortBinding(fd, openOptions);\n    },\n};\n/**\n * The Darwin binding layer for OSX\n */\nclass DarwinPortBinding {\n    constructor(fd, options) {\n        this.fd = fd;\n        this.openOptions = options;\n        this.poller = new poller_1.Poller(fd);\n        this.writeOperation = null;\n    }\n    get isOpen() {\n        return this.fd !== null;\n    }\n    async close() {\n        debug('close');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        const fd = this.fd;\n        this.poller.stop();\n        this.poller.destroy();\n        this.fd = null;\n        await (0, load_bindings_1.asyncClose)(fd);\n    }\n    async read(buffer, offset, length) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new TypeError('\"buffer\" is not a Buffer');\n        }\n        if (typeof offset !== 'number' || isNaN(offset)) {\n            throw new TypeError(`\"offset\" is not an integer got \"${isNaN(offset) ? 'NaN' : typeof offset}\"`);\n        }\n        if (typeof length !== 'number' || isNaN(length)) {\n            throw new TypeError(`\"length\" is not an integer got \"${isNaN(length) ? 'NaN' : typeof length}\"`);\n        }\n        debug('read');\n        if (buffer.length < offset + length) {\n            throw new Error('buffer is too small');\n        }\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        return (0, unix_read_1.unixRead)({ binding: this, buffer, offset, length });\n    }\n    async write(buffer) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new TypeError('\"buffer\" is not a Buffer');\n        }\n        debug('write', buffer.length, 'bytes');\n        if (!this.isOpen) {\n            debug('write', 'error port is not open');\n            throw new Error('Port is not open');\n        }\n        this.writeOperation = (async () => {\n            if (buffer.length === 0) {\n                return;\n            }\n            await (0, unix_write_1.unixWrite)({ binding: this, buffer });\n            this.writeOperation = null;\n        })();\n        return this.writeOperation;\n    }\n    async update(options) {\n        if (!options || typeof options !== 'object' || Array.isArray(options)) {\n            throw TypeError('\"options\" is not an object');\n        }\n        if (typeof options.baudRate !== 'number') {\n            throw new TypeError('\"options.baudRate\" is not a number');\n        }\n        debug('update');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await (0, load_bindings_1.asyncUpdate)(this.fd, options);\n    }\n    async set(options) {\n        if (!options || typeof options !== 'object' || Array.isArray(options)) {\n            throw new TypeError('\"options\" is not an object');\n        }\n        debug('set', options);\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await (0, load_bindings_1.asyncSet)(this.fd, options);\n    }\n    async get() {\n        debug('get');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        return (0, load_bindings_1.asyncGet)(this.fd);\n    }\n    async getBaudRate() {\n        debug('getBaudRate');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        throw new Error('getBaudRate is not implemented on darwin');\n    }\n    async flush() {\n        debug('flush');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await (0, load_bindings_1.asyncFlush)(this.fd);\n    }\n    async drain() {\n        debug('drain');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await this.writeOperation;\n        await (0, load_bindings_1.asyncDrain)(this.fd);\n    }\n}\nexports.DarwinPortBinding = DarwinPortBinding;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"child_process\" has been externalized for browser compatibility. Cannot access \"child_process.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.linuxList = void 0;\nconst child_process_1 = require(\"child_process\");\nconst parser_readline_1 = require(\"@serialport/parser-readline\");\n// get only serial port names\nfunction checkPathOfDevice(path) {\n    return /(tty(S|WCH|ACM|USB|AMA|MFD|O|XRUSB)|rfcomm)/.test(path) && path;\n}\nfunction propName(name) {\n    return {\n        DEVNAME: 'path',\n        ID_VENDOR_ENC: 'manufacturer',\n        ID_SERIAL_SHORT: 'serialNumber',\n        ID_VENDOR_ID: 'vendorId',\n        ID_MODEL_ID: 'productId',\n        DEVLINKS: 'pnpId',\n    }[name.toUpperCase()];\n}\nfunction decodeHexEscape(str) {\n    return str.replace(/\\\\x([a-fA-F0-9]{2})/g, (a, b) => {\n        return String.fromCharCode(parseInt(b, 16));\n    });\n}\nfunction propVal(name, val) {\n    if (name === 'pnpId') {\n        const match = val.match(/\\/by-id\\/([^\\s]+)/);\n        return (match === null || match === void 0 ? void 0 : match[1]) || undefined;\n    }\n    if (name === 'manufacturer') {\n        return decodeHexEscape(val);\n    }\n    if (/^0x/.test(val)) {\n        return val.substr(2);\n    }\n    return val;\n}\nfunction linuxList(spawnCmd = child_process_1.spawn) {\n    const ports = [];\n    const udevadm = spawnCmd('udevadm', ['info', '-e']);\n    const lines = udevadm.stdout.pipe(new parser_readline_1.ReadlineParser());\n    let skipPort = false;\n    let port = {\n        path: '',\n        manufacturer: undefined,\n        serialNumber: undefined,\n        pnpId: undefined,\n        locationId: undefined,\n        vendorId: undefined,\n        productId: undefined,\n    };\n    lines.on('data', (line) => {\n        const lineType = line.slice(0, 1);\n        const data = line.slice(3);\n        // new port entry\n        if (lineType === 'P') {\n            port = {\n                path: '',\n                manufacturer: undefined,\n                serialNumber: undefined,\n                pnpId: undefined,\n                locationId: undefined,\n                vendorId: undefined,\n                productId: undefined,\n            };\n            skipPort = false;\n            return;\n        }\n        if (skipPort) {\n            return;\n        }\n        // Check dev name and save port if it matches flag to skip the rest of the data if not\n        if (lineType === 'N') {\n            if (checkPathOfDevice(data)) {\n                ports.push(port);\n            }\n            else {\n                skipPort = true;\n            }\n            return;\n        }\n        // parse data about each port\n        if (lineType === 'E') {\n            const keyValue = data.match(/^(.+)=(.*)/);\n            if (!keyValue) {\n                return;\n            }\n            const key = propName(keyValue[1]);\n            if (!key) {\n                return;\n            }\n            port[key] = propVal(key, keyValue[2]);\n        }\n    });\n    return new Promise((resolve, reject) => {\n        udevadm.on('close', (code) => {\n            if (code) {\n                reject(new Error(`Error listing ports udevadm exited with error code: ${code}`));\n            }\n        });\n        udevadm.on('error', reject);\n        lines.on('error', reject);\n        lines.on('finish', () => resolve(ports));\n    });\n}\nexports.linuxList = linuxList;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinuxPortBinding = exports.LinuxBinding = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst linux_list_1 = require(\"./linux-list\");\nconst poller_1 = require(\"./poller\");\nconst unix_read_1 = require(\"./unix-read\");\nconst unix_write_1 = require(\"./unix-write\");\nconst load_bindings_1 = require(\"./load-bindings\");\nconst debug = (0, debug_1.default)('serialport/bindings-cpp');\nexports.LinuxBinding = {\n    list() {\n        debug('list');\n        return (0, linux_list_1.linuxList)();\n    },\n    async open(options) {\n        if (!options || typeof options !== 'object' || Array.isArray(options)) {\n            throw new TypeError('\"options\" is not an object');\n        }\n        if (!options.path) {\n            throw new TypeError('\"path\" is not a valid port');\n        }\n        if (!options.baudRate) {\n            throw new TypeError('\"baudRate\" is not a valid baudRate');\n        }\n        debug('open');\n        const openOptions = Object.assign({ vmin: 1, vtime: 0, dataBits: 8, lock: true, stopBits: 1, parity: 'none', rtscts: false, xon: false, xoff: false, xany: false, hupcl: true }, options);\n        const fd = await (0, load_bindings_1.asyncOpen)(openOptions.path, openOptions);\n        this.fd = fd;\n        return new LinuxPortBinding(fd, openOptions);\n    },\n};\n/**\n * The linux binding layer\n */\nclass LinuxPortBinding {\n    constructor(fd, openOptions) {\n        this.fd = fd;\n        this.openOptions = openOptions;\n        this.poller = new poller_1.Poller(fd);\n        this.writeOperation = null;\n    }\n    get isOpen() {\n        return this.fd !== null;\n    }\n    async close() {\n        debug('close');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        const fd = this.fd;\n        this.poller.stop();\n        this.poller.destroy();\n        this.fd = null;\n        await (0, load_bindings_1.asyncClose)(fd);\n    }\n    async read(buffer, offset, length) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new TypeError('\"buffer\" is not a Buffer');\n        }\n        if (typeof offset !== 'number' || isNaN(offset)) {\n            throw new TypeError(`\"offset\" is not an integer got \"${isNaN(offset) ? 'NaN' : typeof offset}\"`);\n        }\n        if (typeof length !== 'number' || isNaN(length)) {\n            throw new TypeError(`\"length\" is not an integer got \"${isNaN(length) ? 'NaN' : typeof length}\"`);\n        }\n        debug('read');\n        if (buffer.length < offset + length) {\n            throw new Error('buffer is too small');\n        }\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        return (0, unix_read_1.unixRead)({ binding: this, buffer, offset, length });\n    }\n    async write(buffer) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new TypeError('\"buffer\" is not a Buffer');\n        }\n        debug('write', buffer.length, 'bytes');\n        if (!this.isOpen) {\n            debug('write', 'error port is not open');\n            throw new Error('Port is not open');\n        }\n        this.writeOperation = (async () => {\n            if (buffer.length === 0) {\n                return;\n            }\n            await (0, unix_write_1.unixWrite)({ binding: this, buffer });\n            this.writeOperation = null;\n        })();\n        return this.writeOperation;\n    }\n    async update(options) {\n        if (!options || typeof options !== 'object' || Array.isArray(options)) {\n            throw TypeError('\"options\" is not an object');\n        }\n        if (typeof options.baudRate !== 'number') {\n            throw new TypeError('\"options.baudRate\" is not a number');\n        }\n        debug('update');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await (0, load_bindings_1.asyncUpdate)(this.fd, options);\n    }\n    async set(options) {\n        if (!options || typeof options !== 'object' || Array.isArray(options)) {\n            throw new TypeError('\"options\" is not an object');\n        }\n        debug('set');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await (0, load_bindings_1.asyncSet)(this.fd, options);\n    }\n    async get() {\n        debug('get');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        return (0, load_bindings_1.asyncGet)(this.fd);\n    }\n    async getBaudRate() {\n        debug('getBaudRate');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        return (0, load_bindings_1.asyncGetBaudRate)(this.fd);\n    }\n    async flush() {\n        debug('flush');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await (0, load_bindings_1.asyncFlush)(this.fd);\n    }\n    async drain() {\n        debug('drain');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await this.writeOperation;\n        await (0, load_bindings_1.asyncDrain)(this.fd);\n    }\n}\nexports.LinuxPortBinding = LinuxPortBinding;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialNumParser = void 0;\nconst PARSERS = [/USB\\\\(?:.+)\\\\(.+)/, /FTDIBUS\\\\(?:.+)\\+(.+?)A?\\\\.+/];\nconst serialNumParser = (pnpId) => {\n    if (!pnpId) {\n        return null;\n    }\n    for (const parser of PARSERS) {\n        const sn = pnpId.match(parser);\n        if (sn) {\n            return sn[1];\n        }\n    }\n    return null;\n};\nexports.serialNumParser = serialNumParser;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WindowsPortBinding = exports.WindowsBinding = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst _1 = require(\".\");\nconst load_bindings_1 = require(\"./load-bindings\");\nconst win32_sn_parser_1 = require(\"./win32-sn-parser\");\nconst debug = (0, debug_1.default)('serialport/bindings-cpp');\nexports.WindowsBinding = {\n    async list() {\n        const ports = await (0, load_bindings_1.asyncList)();\n        // Grab the serial number from the pnp id\n        return ports.map(port => {\n            if (port.pnpId && !port.serialNumber) {\n                const serialNumber = (0, win32_sn_parser_1.serialNumParser)(port.pnpId);\n                if (serialNumber) {\n                    return Object.assign(Object.assign({}, port), { serialNumber });\n                }\n            }\n            return port;\n        });\n    },\n    async open(options) {\n        if (!options || typeof options !== 'object' || Array.isArray(options)) {\n            throw new TypeError('\"options\" is not an object');\n        }\n        if (!options.path) {\n            throw new TypeError('\"path\" is not a valid port');\n        }\n        if (!options.baudRate) {\n            throw new TypeError('\"baudRate\" is not a valid baudRate');\n        }\n        debug('open');\n        const openOptions = Object.assign({ dataBits: 8, lock: true, stopBits: 1, parity: 'none', rtscts: false, rtsMode: 'handshake', xon: false, xoff: false, xany: false, hupcl: true }, options);\n        const fd = await (0, load_bindings_1.asyncOpen)(openOptions.path, openOptions);\n        return new WindowsPortBinding(fd, openOptions);\n    },\n};\n/**\n * The Windows binding layer\n */\nclass WindowsPortBinding {\n    constructor(fd, options) {\n        this.fd = fd;\n        this.openOptions = options;\n        this.writeOperation = null;\n    }\n    get isOpen() {\n        return this.fd !== null;\n    }\n    async close() {\n        debug('close');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        const fd = this.fd;\n        this.fd = null;\n        await (0, load_bindings_1.asyncClose)(fd);\n    }\n    async read(buffer, offset, length) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new TypeError('\"buffer\" is not a Buffer');\n        }\n        if (typeof offset !== 'number' || isNaN(offset)) {\n            throw new TypeError(`\"offset\" is not an integer got \"${isNaN(offset) ? 'NaN' : typeof offset}\"`);\n        }\n        if (typeof length !== 'number' || isNaN(length)) {\n            throw new TypeError(`\"length\" is not an integer got \"${isNaN(length) ? 'NaN' : typeof length}\"`);\n        }\n        debug('read');\n        if (buffer.length < offset + length) {\n            throw new Error('buffer is too small');\n        }\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        try {\n            const bytesRead = await (0, load_bindings_1.asyncRead)(this.fd, buffer, offset, length);\n            return { bytesRead, buffer };\n        }\n        catch (err) {\n            if (!this.isOpen) {\n                throw new _1.BindingsError(err.message, { canceled: true });\n            }\n            throw err;\n        }\n    }\n    async write(buffer) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new TypeError('\"buffer\" is not a Buffer');\n        }\n        debug('write', buffer.length, 'bytes');\n        if (!this.isOpen) {\n            debug('write', 'error port is not open');\n            throw new Error('Port is not open');\n        }\n        this.writeOperation = (async () => {\n            if (buffer.length === 0) {\n                return;\n            }\n            await (0, load_bindings_1.asyncWrite)(this.fd, buffer);\n            this.writeOperation = null;\n        })();\n        return this.writeOperation;\n    }\n    async update(options) {\n        if (!options || typeof options !== 'object' || Array.isArray(options)) {\n            throw TypeError('\"options\" is not an object');\n        }\n        if (typeof options.baudRate !== 'number') {\n            throw new TypeError('\"options.baudRate\" is not a number');\n        }\n        debug('update');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await (0, load_bindings_1.asyncUpdate)(this.fd, options);\n    }\n    async set(options) {\n        if (!options || typeof options !== 'object' || Array.isArray(options)) {\n            throw new TypeError('\"options\" is not an object');\n        }\n        debug('set', options);\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await (0, load_bindings_1.asyncSet)(this.fd, options);\n    }\n    async get() {\n        debug('get');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        return (0, load_bindings_1.asyncGet)(this.fd);\n    }\n    async getBaudRate() {\n        debug('getBaudRate');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        return (0, load_bindings_1.asyncGetBaudRate)(this.fd);\n    }\n    async flush() {\n        debug('flush');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await (0, load_bindings_1.asyncFlush)(this.fd);\n    }\n    async drain() {\n        debug('drain');\n        if (!this.isOpen) {\n            throw new Error('Port is not open');\n        }\n        await this.writeOperation;\n        await (0, load_bindings_1.asyncDrain)(this.fd);\n    }\n}\nexports.WindowsPortBinding = WindowsPortBinding;\n", "'use strict';\n\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.autoDetect = void 0;\n/* eslint-disable @typescript-eslint/no-var-requires */\nconst debug_1 = __importDefault(require(\"debug\"));\nconst darwin_1 = require(\"./darwin\");\nconst linux_1 = require(\"./linux\");\nconst win32_1 = require(\"./win32\");\nconst debug = (0, debug_1.default)('serialport/bindings-cpp');\n__exportStar(require(\"@serialport/bindings-interface\"), exports);\n__exportStar(require(\"./darwin\"), exports);\n__exportStar(require(\"./linux\"), exports);\n__exportStar(require(\"./win32\"), exports);\n__exportStar(require(\"./errors\"), exports);\n/**\n * This is an auto detected binding for your current platform\n */\nfunction autoDetect() {\n    switch (process.platform) {\n        case 'win32':\n            debug('loading WindowsBinding');\n            return win32_1.WindowsBinding;\n        case 'darwin':\n            debug('loading DarwinBinding');\n            return darwin_1.DarwinBinding;\n        default:\n            debug('loading LinuxBinding');\n            return linux_1.LinuxBinding;\n    }\n}\nexports.autoDetect = autoDetect;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SerialPort = void 0;\nconst stream_1 = require(\"@serialport/stream\");\nconst bindings_cpp_1 = require(\"@serialport/bindings-cpp\");\nconst DetectedBinding = (0, bindings_cpp_1.autoDetect)();\nclass SerialPort extends stream_1.SerialPortStream {\n    constructor(options, openCallback) {\n        const opts = {\n            binding: DetectedBinding,\n            ...options,\n        };\n        super(opts, openCallback);\n    }\n}\nexports.SerialPort = SerialPort;\nSerialPort.list = DetectedBinding.list;\nSerialPort.binding = DetectedBinding;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"@serialport/parser-byte-length\"), exports);\n__exportStar(require(\"@serialport/parser-cctalk\"), exports);\n__exportStar(require(\"@serialport/parser-delimiter\"), exports);\n__exportStar(require(\"@serialport/parser-inter-byte-timeout\"), exports);\n__exportStar(require(\"@serialport/parser-packet-length\"), exports);\n__exportStar(require(\"@serialport/parser-readline\"), exports);\n__exportStar(require(\"@serialport/parser-ready\"), exports);\n__exportStar(require(\"@serialport/parser-regex\"), exports);\n__exportStar(require(\"@serialport/parser-slip-encoder\"), exports);\n__exportStar(require(\"@serialport/parser-spacepacket\"), exports);\n__exportStar(require(\"./serialport-mock\"), exports);\n__exportStar(require(\"./serialport\"), exports);\n", "/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Node.js serial transport for osc.js\n *\n * Copyright 2014-2019, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/*jshint node:true*/\n\nvar osc = osc || require(\"../osc.js\"),\n    SerialPort = require(\"serialport\").SerialPort;\n\nosc.supportsSerial = true;\n\nosc.SerialPort = function (options) {\n    this.on(\"open\", this.listen.bind(this));\n    osc.SLIPPort.call(this, options);\n    this.options.bitrate = this.options.bitrate || 9600;\n\n    this.serialPort = options.serialPort;\n    if (this.serialPort) {\n        this.emit(\"open\", this.serialPort);\n    }\n};\n\nvar p = osc.SerialPort.prototype = Object.create(osc.SLIPPort.prototype);\np.constructor = osc.SerialPort;\n\np.open = function () {\n    if (this.serialPort) {\n        // If we already have a serial port, close it and open a new one.\n        this.once(\"close\", this.open.bind(this));\n        this.close();\n        return;\n    }\n\n    var that = this;\n\n    this.serialPort = new SerialPort({\n        path: this.options.devicePath,\n        baudRate: this.options.bitrate,\n        autoOpen: false\n    });\n\n    this.serialPort.on(\"error\", function (err) {\n        that.emit(\"error\", err);\n    });\n\n    this.serialPort.on(\"open\", function () {\n        that.emit(\"open\", that.serialPort);\n    });\n\n    this.serialPort.open();\n};\n\np.listen = function () {\n    var that = this;\n\n    this.serialPort.on(\"data\", function (data) {\n        that.emit(\"data\", data, undefined);\n    });\n\n    this.serialPort.on(\"close\", function () {\n        that.emit(\"close\");\n    });\n\n    that.emit(\"ready\");\n};\n\np.sendRaw = function (encoded) {\n    if (!this.serialPort || !this.serialPort.isOpen) {\n        osc.fireClosedPortSendError(this);\n        return;\n    }\n\n    var that = this;\n    this.serialPort.write(encoded);\n};\n\np.close = function () {\n    if (this.serialPort) {\n        this.serialPort.close();\n    }\n};\n", "/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Node.js serial port loader for osc.js\n *\n * Copyright 2019, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/*jshint node:true*/\n\nvar osc = osc || require(\"../osc.js\");\n\ntry {\n    var SerialPort = require(\"serialport\");\n    require(\"./osc-node-serialport.js\");\n} catch (err) {\n    osc.SerialPort = function () {\n        throw new Error(\"The Node.js SerialPort library is not installed. osc.js' serial transport is unavailable.\");\n    };\n}\n", "/*\n * osc.js: An Open Sound Control library for JavaScript that works in both the browser and Node.js\n *\n * Node.js transports for osc.js\n *\n * Copyright 2014-2016, Colin Clark\n * Licensed under the MIT and GPL 3 licenses.\n */\n\n/*global require, module, Buffer*/\n/*jshint node:true*/\n\n(function () {\n    \"use strict\";\n\n    var shallowMerge = function (target, toMerge) {\n        target = target || {};\n        if (toMerge.forEach === undefined) {\n            toMerge = [toMerge];\n        }\n\n        toMerge.forEach(function (obj) {\n            for (var prop in obj) {\n                target[prop] = obj[prop];\n            }\n        });\n\n        return target;\n    };\n\n    var dgram = require(\"dgram\"),\n        net = require(\"net\"),\n        WebSocket = require(\"ws\"),\n        modules = [\n            require(\"../osc.js\"),\n            require(\"../osc-transports.js\"),\n            require(\"./osc-websocket-client.js\"),\n            require(\"./osc-node-serialport-loader.js\")\n        ],\n        osc = shallowMerge({}, modules);\n\n\n    /*******\n     * UDP *\n     *******/\n\n    osc.UDPPort = function (options) {\n        osc.Port.call(this, options);\n\n        this.options.localAddress = this.options.localAddress || \"127.0.0.1\";\n        this.options.localPort = this.options.localPort !== undefined ?\n            this.options.localPort : 57121;\n\n        this.options.remoteAddress = this.options.remoteAddress || \"127.0.0.1\";\n        this.options.remotePort = this.options.remotePort !== undefined ?\n            this.options.remotePort : 57121;\n\n        this.on(\"open\", this.listen.bind(this));\n\n        this.socket = options.socket;\n        if (this.socket) {\n            this.emit(\"open\", this.socket);\n        }\n    };\n\n    var p = osc.UDPPort.prototype = Object.create(osc.Port.prototype);\n    p.constructor = osc.UDPPort;\n\n    p.open = function () {\n        var that = this;\n\n        if (this.socket) {\n            return;\n        }\n\n        this.socket = dgram.createSocket(\"udp4\");\n\n        this.socket.on(\"error\", function (error) {\n            that.emit(\"error\", error);\n        });\n\n        function onBound() {\n            osc.UDPPort.setupMulticast(that);\n\n            if (that.options.broadcast) {\n                that.socket.setBroadcast(that.options.broadcast);\n            }\n\n            that.emit(\"open\", that.socket);\n        }\n\n        this.socket.bind(this.options.localPort, this.options.localAddress, onBound);\n    };\n\n    p.listen = function () {\n        if (!this.socket) {\n            return;\n        }\n\n        var that = this;\n        this.socket.on(\"message\", function (msg, rinfo) {\n            that.emit(\"data\", msg, rinfo);\n        });\n\n        this.socket.on(\"close\", function () {\n            that.emit(\"close\");\n        });\n\n        that.emit(\"ready\");\n    };\n\n    p.sendRaw = function (encoded, address, port) {\n        if (!this.socket) {\n            osc.fireClosedPortSendError(this);\n            return;\n        }\n\n        var length = encoded.byteLength !== undefined ? encoded.byteLength : encoded.length,\n            that = this;\n\n        address = address || this.options.remoteAddress;\n        port = port !== undefined ? port : this.options.remotePort;\n\n        this.socket.send(encoded, 0, length, port, address, function (err) {\n            if (err) {\n                that.emit(\"error\", err);\n            }\n        });\n    };\n\n    p.close = function () {\n        if (this.socket) {\n            this.socket.close();\n        }\n    };\n\n    osc.UDPPort.setupMulticast = function (that) {\n        if (that.options.multicastTTL !== undefined) {\n            that.socket.setMulticastTTL(that.options.multicastTTL);\n        }\n\n        if (that.options.multicastMembership) {\n            if (typeof that.options.multicastMembership === \"string\") {\n                that.options.multicastMembership = [that.options.multicastMembership];\n            }\n\n            that.options.multicastMembership.forEach(function (addr) {\n                if (typeof addr === \"string\") {\n                  that.socket.addMembership(addr);\n                } else {\n                  that.socket.addMembership(addr.address, addr.interface);\n                }\n            });\n        }\n    };\n\n\n    /*******\n     * TCP *\n     *******/\n\n    osc.TCPSocketPort = function (options) {\n        osc.SLIPPort.call(this, options);\n\n        var o = this.options;\n\n        // Aliases \"localAddress\" and \"localPort\" to\n        // \"address\" and \"port\", respectively, for consistency\n        // with osc.UDPSocket.\n        o.address = o.address || o.localAddress || \"127.0.0.1\";\n        o.port = o.port !== undefined ? o.port :\n            o.localPort !== undefined ? o.localPort : 57121;\n\n        this.on(\"open\", this.listen.bind(this));\n        this.socket = options.socket;\n\n        if (this.socket) {\n            this.emit(\"open\", this.socket);\n        }\n    };\n\n    p = osc.TCPSocketPort.prototype = Object.create(osc.SLIPPort.prototype);\n    p.constructor = osc.TCPSocketPort;\n\n    p.open = function (address, port) {\n        var o = this.options;\n        address = address || o.address;\n        port = port !== undefined ? port : o.port;\n\n        if (!this.socket) {\n            this.socket = net.connect({\n                port: port,\n                host: address\n            });\n        } else {\n            this.socket.connect(port, address);\n        }\n\n        this.emit(\"open\", this.socket);\n    };\n\n    p.listen = function () {\n        var that = this;\n        this.socket.on(\"data\", function (msg) {\n            that.emit(\"data\", msg, undefined);\n        });\n\n        this.socket.on(\"error\", function (err) {\n            that.emit(\"error\", err);\n        });\n\n        this.socket.on(\"close\", function (hadError) {\n            that.emit(\"close\", hadError);\n        });\n\n        this.socket.on(\"connect\", function () {\n            that.emit(\"ready\");\n        });\n    };\n\n    p.sendRaw = function (encoded) {\n        if (!this.socket) {\n            return;\n        }\n\n        encoded = Buffer.from(encoded);\n\n        try {\n            this.socket.write(encoded);\n        } catch (err) {\n            this.emit(\"error\", err);\n        }\n    };\n\n    p.close = function () {\n        this.socket.end();\n    };\n\n\n    module.exports = osc;\n}());\n"],
  "mappings": "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",
  "names": ["Long", "exports", "require_dist", "require_dist", "require_dist", "require_dist", "require_dist", "require_dist", "require_dist", "require_dist", "exports", "require_dist", "require_browser", "require_dist", "require_dist", "serialNumber", "dir", "platform", "arch", "runtime", "abi", "require_node_gyp_build", "require_dist", "require_dist", "exports", "require_dist", "exports", "WebSocket"]
}
